# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default -Djava.security.manager -Djava.security.policy=jar:file:/Users/antoniotrovato/Documents/GitHub/jmh-1.37/jmh-core/target/jmh-core-1.37.jar!/jmh-security-minimal-runner.policy
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.security.BenchmarkMinJVMArgsSecurityManagerTest.test

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 62,024 ops/s


Result "org.openjdk.jmh.it.security.BenchmarkMinJVMArgsSecurityManagerTest.test":
  62,024 ops/s


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default -Djava.security.manager -Djava.security.policy=jar:file:/Users/antoniotrovato/Documents/GitHub/jmh-1.37/jmh-core/target/jmh-core-1.37.jar!/jmh-security-minimal-runner.policy
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.security.BenchmarkMinJVMArgsSecurityManagerTest.test

# Run progress: 25,00% complete, ETA 00:00:01
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 0,012 s/op


Result "org.openjdk.jmh.it.security.BenchmarkMinJVMArgsSecurityManagerTest.test":
  0,012 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default -Djava.security.manager -Djava.security.policy=jar:file:/Users/antoniotrovato/Documents/GitHub/jmh-1.37/jmh-core/target/jmh-core-1.37.jar!/jmh-security-minimal-runner.policy
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.security.BenchmarkMinJVMArgsSecurityManagerTest.test

# Run progress: 50,00% complete, ETA 00:00:01
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 0,013 s/op
                 p0.00:   0,013 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op




# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default -Djava.security.manager -Djava.security.policy=jar:file:/Users/antoniotrovato/Documents/GitHub/jmh-1.37/jmh-core/target/jmh-core-1.37.jar!/jmh-security-minimal-runner.policy
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.security.BenchmarkMinJVMArgsSecurityManagerTest.test

# Run progress: 75,00% complete, ETA 00:00:00
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 0,014 s/op



# Run complete. Total time: 00:00:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                              Mode  Cnt   Score   Error  Units
BenchmarkMinJVMArgsSecurityManagerTest.test           thrpt       62,024          ops/s
BenchmarkMinJVMArgsSecurityManagerTest.test            avgt        0,012           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test          sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test:p0.00    sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test:p0.50    sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test:p0.90    sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test:p0.95    sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test:p0.99    sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test:p0.999   sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test:p0.9999  sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test:p1.00    sample        0,013           s/op
BenchmarkMinJVMArgsSecurityManagerTest.test              ss        0,014           s/op
