# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 2 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 4 threads (1 group; 2x "test1", 2x "test2" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
Iteration   1: 331,632 ops/s
                 test1: 165,625 ops/s
                 test2: 166,007 ops/s

Iteration   2: 332,847 ops/s
                 test1: 165,791 ops/s
                 test2: 167,056 ops/s



Result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1":
  332,239 ops/s

Secondary result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1:test1":
  165,708 ops/s

Secondary result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1:test2":
  166,531 ops/s


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 2 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 4 threads (1 group; 2x "test1", 2x "test2" in each group), will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1

# Run progress: 33,22% complete, ETA 00:00:01
# Fork: 1 of 1
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,002 s/op
                 test1: 0,012 s/op
                 test2: 0,012 s/op

Iteration   2: 0,012 ±(99.9%) 0,002 s/op
                 test1: 0,012 s/op
                 test2: 0,012 s/op



Result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1":
  0,012 s/op

Secondary result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1:test1":
  0,012 s/op

Secondary result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1:test2":
  0,012 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 2 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 4 threads (1 group; 2x "test1", 2x "test2" in each group), will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1

# Run progress: 66,45% complete, ETA 00:00:01
# Fork: 1 of 1
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:         0,010 s/op
                 p0.50:         0,013 s/op
                 p0.90:         0,013 s/op
                 p0.95:         0,013 s/op
                 p0.99:         0,013 s/op
                 p0.999:        0,013 s/op
                 p0.9999:       0,013 s/op
                 p1.00:         0,013 s/op
                 test1:         0,012 ±(99.9%) 0,001 s/op
                 test1:p0.00:   0,011 s/op
                 test1:p0.50:   0,013 s/op
                 test1:p0.90:   0,013 s/op
                 test1:p0.95:   0,013 s/op
                 test1:p0.99:   0,013 s/op
                 test1:p0.999:  0,013 s/op
                 test1:p0.9999: 0,013 s/op
                 test1:p1.00:   0,013 s/op
                 test2:         0,012 ±(99.9%) 0,001 s/op
                 test2:p0.00:   0,010 s/op
                 test2:p0.50:   0,013 s/op
                 test2:p0.90:   0,013 s/op
                 test2:p0.95:   0,013 s/op
                 test2:p0.99:   0,013 s/op
                 test2:p0.999:  0,013 s/op
                 test2:p0.9999: 0,013 s/op
                 test2:p1.00:   0,013 s/op

Iteration   2: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:         0,010 s/op
                 p0.50:         0,012 s/op
                 p0.90:         0,013 s/op
                 p0.95:         0,013 s/op
                 p0.99:         0,013 s/op
                 p0.999:        0,013 s/op
                 p0.9999:       0,013 s/op
                 p1.00:         0,013 s/op
                 test1:         0,012 ±(99.9%) 0,001 s/op
                 test1:p0.00:   0,011 s/op
                 test1:p0.50:   0,012 s/op
                 test1:p0.90:   0,013 s/op
                 test1:p0.95:   0,013 s/op
                 test1:p0.99:   0,013 s/op
                 test1:p0.999:  0,013 s/op
                 test1:p0.9999: 0,013 s/op
                 test1:p1.00:   0,013 s/op
                 test2:         0,012 ±(99.9%) 0,001 s/op
                 test2:p0.00:   0,010 s/op
                 test2:p0.50:   0,012 s/op
                 test2:p0.90:   0,013 s/op
                 test2:p0.95:   0,013 s/op
                 test2:p0.99:   0,013 s/op
                 test2:p0.999:  0,013 s/op
                 test2:p0.9999: 0,013 s/op
                 test2:p1.00:   0,013 s/op



Result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1":
  N = 67
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 1 
    [0,010, 0,011) = 3 
    [0,011, 0,011) = 8 
    [0,011, 0,011) = 5 
    [0,011, 0,011) = 4 
    [0,011, 0,012) = 4 
    [0,012, 0,012) = 2 
    [0,012, 0,012) = 3 
    [0,012, 0,012) = 5 
    [0,012, 0,013) = 2 
    [0,013, 0,013) = 29 
    [0,013, 0,013) = 0 
    [0,013, 0,013) = 1 
    [0,013, 0,014) = 0 
    [0,014, 0,014) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,010 s/op
     p(50,0000) =      0,012 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op

Secondary result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1:test1":
  N = 33
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 0 
    [0,010, 0,011) = 0 
    [0,011, 0,011) = 6 
    [0,011, 0,011) = 2 
    [0,011, 0,011) = 2 
    [0,011, 0,012) = 1 
    [0,012, 0,012) = 1 
    [0,012, 0,012) = 2 
    [0,012, 0,012) = 2 
    [0,012, 0,013) = 1 
    [0,013, 0,013) = 15 
    [0,013, 0,013) = 0 
    [0,013, 0,013) = 1 
    [0,013, 0,014) = 0 
    [0,014, 0,014) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,011 s/op
     p(50,0000) =      0,012 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op

Secondary result "org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1:test2":
  N = 34
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 1 
    [0,010, 0,011) = 3 
    [0,011, 0,011) = 2 
    [0,011, 0,011) = 3 
    [0,011, 0,011) = 2 
    [0,011, 0,012) = 3 
    [0,012, 0,012) = 1 
    [0,012, 0,012) = 1 
    [0,012, 0,012) = 3 
    [0,012, 0,013) = 1 
    [0,013, 0,013) = 14 
    [0,013, 0,013) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,010 s/op
     p(50,0000) =      0,012 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 2 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 4 threads (1 group; 2x "test1", 2x "test2" in each group)
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.sharing.GroupBenchSharingTest.group1

# Run progress: 99,67% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
Iteration   1: 0,011 ±(99.9%) 0,003 s/op
                 test1: 0,011 s/op
                 test2: 0,011 s/op

Iteration   2: 0,012 ±(99.9%) 0,007 s/op
                 test1: 0,012 s/op
                 test2: 0,012 s/op




# Run complete. Total time: 00:00:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt    Score    Error  Units
GroupBenchSharingTest.group1                 thrpt    2  332,239           ops/s
GroupBenchSharingTest.group1:test1           thrpt    2  165,708           ops/s
GroupBenchSharingTest.group1:test2           thrpt    2  166,531           ops/s
GroupBenchSharingTest.group1                  avgt    2    0,012            s/op
GroupBenchSharingTest.group1:test1            avgt    2    0,012            s/op
GroupBenchSharingTest.group1:test2            avgt    2    0,012            s/op
GroupBenchSharingTest.group1                sample   67    0,012 ±  0,001   s/op
GroupBenchSharingTest.group1:p0.00          sample         0,010            s/op
GroupBenchSharingTest.group1:p0.50          sample         0,012            s/op
GroupBenchSharingTest.group1:p0.90          sample         0,013            s/op
GroupBenchSharingTest.group1:p0.95          sample         0,013            s/op
GroupBenchSharingTest.group1:p0.99          sample         0,013            s/op
GroupBenchSharingTest.group1:p0.999         sample         0,013            s/op
GroupBenchSharingTest.group1:p0.9999        sample         0,013            s/op
GroupBenchSharingTest.group1:p1.00          sample         0,013            s/op
GroupBenchSharingTest.group1:test1          sample   33    0,012 ±  0,001   s/op
GroupBenchSharingTest.group1:test1:p0.00    sample         0,011            s/op
GroupBenchSharingTest.group1:test1:p0.50    sample         0,012            s/op
GroupBenchSharingTest.group1:test1:p0.90    sample         0,013            s/op
GroupBenchSharingTest.group1:test1:p0.95    sample         0,013            s/op
GroupBenchSharingTest.group1:test1:p0.99    sample         0,013            s/op
GroupBenchSharingTest.group1:test1:p0.999   sample         0,013            s/op
GroupBenchSharingTest.group1:test1:p0.9999  sample         0,013            s/op
GroupBenchSharingTest.group1:test1:p1.00    sample         0,013            s/op
GroupBenchSharingTest.group1:test2          sample   34    0,012 ±  0,001   s/op
GroupBenchSharingTest.group1:test2:p0.00    sample         0,010            s/op
GroupBenchSharingTest.group1:test2:p0.50    sample         0,012            s/op
GroupBenchSharingTest.group1:test2:p0.90    sample         0,013            s/op
GroupBenchSharingTest.group1:test2:p0.95    sample         0,013            s/op
GroupBenchSharingTest.group1:test2:p0.99    sample         0,013            s/op
GroupBenchSharingTest.group1:test2:p0.999   sample         0,013            s/op
GroupBenchSharingTest.group1:test2:p0.9999  sample         0,013            s/op
GroupBenchSharingTest.group1:test2:p1.00    sample         0,013            s/op
GroupBenchSharingTest.group1                    ss    2    0,012            s/op
GroupBenchSharingTest.group1:test1              ss    2    0,012            s/op
GroupBenchSharingTest.group1:test2              ss    2    0,011            s/op
