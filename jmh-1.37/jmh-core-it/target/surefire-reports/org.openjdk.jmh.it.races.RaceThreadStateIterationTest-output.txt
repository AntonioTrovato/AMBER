# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 50 iterations, 10 ms each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.races.RaceThreadStateIterationTest.test

# Run progress: 0,00% complete, ETA 00:00:01
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
The Dynamic Halt is NOT Active
Iteration   1: 319,568 ops/s
Iteration   2: 336,195 ops/s
Iteration   3: 340,431 ops/s
Iteration   4: 320,240 ops/s
Iteration   5: 317,467 ops/s
Iteration   6: 355,384 ops/s
Iteration   7: 329,944 ops/s
Iteration   8: 336,565 ops/s
Iteration   9: 343,090 ops/s
Iteration  10: 327,607 ops/s
Iteration  11: 323,283 ops/s
Iteration  12: 360,906 ops/s
Iteration  13: 336,463 ops/s
Iteration  14: 320,062 ops/s
Iteration  15: 339,080 ops/s
Iteration  16: 324,148 ops/s
Iteration  17: 331,377 ops/s
Iteration  18: 342,209 ops/s
Iteration  19: 352,064 ops/s
Iteration  20: 337,273 ops/s
Iteration  21: 335,669 ops/s
Iteration  22: 324,761 ops/s
Iteration  23: 349,043 ops/s
Iteration  24: 354,864 ops/s
Iteration  25: 319,952 ops/s
Iteration  26: 358,466 ops/s
Iteration  27: 341,174 ops/s
Iteration  28: 340,473 ops/s
Iteration  29: 362,689 ops/s
Iteration  30: 337,302 ops/s
Iteration  31: 341,902 ops/s
Iteration  32: 350,558 ops/s
Iteration  33: 338,920 ops/s
Iteration  34: 329,391 ops/s
Iteration  35: 328,264 ops/s
Iteration  36: 328,064 ops/s
Iteration  37: 321,006 ops/s
Iteration  38: 321,287 ops/s
Iteration  39: 347,513 ops/s
Iteration  40: 344,744 ops/s
Iteration  41: 318,818 ops/s
Iteration  42: 327,987 ops/s
Iteration  43: 322,174 ops/s
Iteration  44: 331,711 ops/s
Iteration  45: 338,190 ops/s
Iteration  46: 321,822 ops/s
Iteration  47: 325,972 ops/s
Iteration  48: 350,411 ops/s
Iteration  49: 342,409 ops/s
Iteration  50: 331,469 ops/s

Result "org.openjdk.jmh.it.races.RaceThreadStateIterationTest.test":
  335,607 ±(99.9%) 6,044 ops/s [Average]
  (min, avg, max) = (317,467, 335,607, 362,689), stdev = 12,210
  CI (99.9%): [329,563, 341,652] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 50 iterations, 10 ms each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.races.RaceThreadStateIterationTest.test

# Run progress: 32,26% complete, ETA 00:00:03
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,002 s/op
Iteration   2: 0,012 ±(99.9%) 0,004 s/op
Iteration   3: 0,012 ±(99.9%) 0,004 s/op
Iteration   4: 0,012 ±(99.9%) 0,002 s/op
Iteration   5: 0,012 ±(99.9%) 0,005 s/op
Iteration   6: 0,013 ±(99.9%) 0,001 s/op
Iteration   7: 0,012 ±(99.9%) 0,005 s/op
Iteration   8: 0,012 ±(99.9%) 0,007 s/op
Iteration   9: 0,012 ±(99.9%) 0,005 s/op
Iteration  10: 0,012 ±(99.9%) 0,001 s/op
Iteration  11: 0,012 ±(99.9%) 0,002 s/op
Iteration  12: 0,012 ±(99.9%) 0,005 s/op
Iteration  13: 0,012 ±(99.9%) 0,002 s/op
Iteration  14: 0,012 ±(99.9%) 0,007 s/op
Iteration  15: 0,012 ±(99.9%) 0,001 s/op
Iteration  16: 0,011 ±(99.9%) 0,007 s/op
Iteration  17: 0,011 ±(99.9%) 0,002 s/op
Iteration  18: 0,012 ±(99.9%) 0,005 s/op
Iteration  19: 0,012 ±(99.9%) 0,002 s/op
Iteration  20: 0,011 ±(99.9%) 0,007 s/op
Iteration  21: 0,012 ±(99.9%) 0,001 s/op
Iteration  22: 0,012 ±(99.9%) 0,002 s/op
Iteration  23: 0,012 ±(99.9%) 0,002 s/op
Iteration  24: 0,012 ±(99.9%) 0,001 s/op
Iteration  25: 0,012 ±(99.9%) 0,001 s/op
Iteration  26: 0,012 ±(99.9%) 0,008 s/op
Iteration  27: 0,012 ±(99.9%) 0,002 s/op
Iteration  28: 0,013 ±(99.9%) 0,001 s/op
Iteration  29: 0,012 ±(99.9%) 0,005 s/op
Iteration  30: 0,012 ±(99.9%) 0,001 s/op
Iteration  31: 0,012 ±(99.9%) 0,001 s/op
Iteration  32: 0,012 ±(99.9%) 0,005 s/op
Iteration  33: 0,012 ±(99.9%) 0,002 s/op
Iteration  34: 0,012 ±(99.9%) 0,002 s/op
Iteration  35: 0,012 ±(99.9%) 0,006 s/op
Iteration  36: 0,011 ±(99.9%) 0,005 s/op
Iteration  37: 0,012 ±(99.9%) 0,003 s/op
Iteration  38: 0,011 ±(99.9%) 0,006 s/op
Iteration  39: 0,012 ±(99.9%) 0,004 s/op
Iteration  40: 0,012 ±(99.9%) 0,006 s/op
Iteration  41: 0,012 ±(99.9%) 0,001 s/op
Iteration  42: 0,012 ±(99.9%) 0,002 s/op
Iteration  43: 0,013 ±(99.9%) 0,001 s/op
Iteration  44: 0,012 ±(99.9%) 0,001 s/op
Iteration  45: 0,012 ±(99.9%) 0,003 s/op
Iteration  46: 0,012 ±(99.9%) 0,007 s/op
Iteration  47: 0,011 ±(99.9%) 0,007 s/op
Iteration  48: 0,012 ±(99.9%) 0,001 s/op
Iteration  49: 0,012 ±(99.9%) 0,001 s/op
Iteration  50: 0,012 ±(99.9%) 0,001 s/op

Result "org.openjdk.jmh.it.races.RaceThreadStateIterationTest.test":
  0,012 ±(99.9%) 0,001 s/op [Average]
  (min, avg, max) = (0,011, 0,012, 0,013), stdev = 0,001
  CI (99.9%): [0,012, 0,012] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 50 iterations, 10 ms each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.races.RaceThreadStateIterationTest.test

# Run progress: 64,52% complete, ETA 00:00:02
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,006 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration   2: 0,012 ±(99.9%) 0,003 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration   3: 0,012 ±(99.9%) 0,007 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration   4: 0,011 ±(99.9%) 0,004 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,010 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration   5: 0,012 ±(99.9%) 0,007 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration   6: 0,011 ±(99.9%) 0,004 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,011 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration   7: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration   8: 0,012 ±(99.9%) 0,003 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration   9: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  10: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,011 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  11: 0,012 ±(99.9%) 0,006 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  12: 0,013 ±(99.9%) 0,001 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  13: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,012 s/op
                 p0.95:   0,012 s/op
                 p0.99:   0,012 s/op
                 p0.999:  0,012 s/op
                 p0.9999: 0,012 s/op
                 p1.00:   0,012 s/op

Iteration  14: 0,012 ±(99.9%) 0,003 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  15: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  16: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,012 s/op
                 p0.95:   0,012 s/op
                 p0.99:   0,012 s/op
                 p0.999:  0,012 s/op
                 p0.9999: 0,012 s/op
                 p1.00:   0,012 s/op

Iteration  17: 0,011 ±(99.9%) 0,004 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,011 s/op
                 p0.90:   0,012 s/op
                 p0.95:   0,012 s/op
                 p0.99:   0,012 s/op
                 p0.999:  0,012 s/op
                 p0.9999: 0,012 s/op
                 p1.00:   0,012 s/op

Iteration  18: 0,012 ±(99.9%) 0,003 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  19: 0,012 ±(99.9%) 0,004 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  20: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,012 s/op
                 p0.95:   0,012 s/op
                 p0.99:   0,012 s/op
                 p0.999:  0,012 s/op
                 p0.9999: 0,012 s/op
                 p1.00:   0,012 s/op

Iteration  21: 0,012 ±(99.9%) 0,006 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  22: 0,012 ±(99.9%) 0,004 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  23: 0,012 ±(99.9%) 0,006 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  24: 0,011 ±(99.9%) 0,004 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,011 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  25: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,012 s/op
                 p0.95:   0,012 s/op
                 p0.99:   0,012 s/op
                 p0.999:  0,012 s/op
                 p0.9999: 0,012 s/op
                 p1.00:   0,012 s/op

Iteration  26: 0,012 ±(99.9%) 0,005 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  27: 0,012 ±(99.9%) 0,007 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  28: 0,012 ±(99.9%) 0,004 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  29: 0,012 ±(99.9%) 0,005 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,012 s/op
                 p0.95:   0,012 s/op
                 p0.99:   0,012 s/op
                 p0.999:  0,012 s/op
                 p0.9999: 0,012 s/op
                 p1.00:   0,012 s/op

Iteration  30: 0,011 ±(99.9%) 0,002 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,011 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  31: 0,012 ±(99.9%) 0,004 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  32: 0,012 ±(99.9%) 0,004 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,011 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  33: 0,012 ±(99.9%) 0,003 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  34: 0,011 ±(99.9%) 0,005 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,010 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  35: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  36: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  37: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  38: 0,012 ±(99.9%) 0,003 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  39: 0,012 ±(99.9%) 0,004 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  40: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  41: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  42: 0,012 ±(99.9%) 0,006 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  43: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,012 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  44: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  45: 0,012 ±(99.9%) 0,003 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  46: 0,011 ±(99.9%) 0,004 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,011 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  47: 0,013 ±(99.9%) 0,001 s/op
                 p0.00:   0,012 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  48: 0,011 ±(99.9%) 0,005 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,010 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  49: 0,013 ±(99.9%) 0,001 s/op
                 p0.00:   0,013 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op

Iteration  50: 0,012 ±(99.9%) 0,004 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op


Result "org.openjdk.jmh.it.races.RaceThreadStateIterationTest.test":
  N = 226
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 5 
    [0,010, 0,011) = 16 
    [0,011, 0,011) = 7 
    [0,011, 0,011) = 11 
    [0,011, 0,011) = 6 
    [0,011, 0,012) = 18 
    [0,012, 0,012) = 17 
    [0,012, 0,012) = 13 
    [0,012, 0,012) = 9 
    [0,012, 0,013) = 32 
    [0,013, 0,013) = 92 
    [0,013, 0,013) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,010 s/op
     p(50,0000) =      0,012 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 50 iterations, 10 ms each
# Timeout: 10 min per iteration
# Threads: 4 threads
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.races.RaceThreadStateIterationTest.test

# Run progress: 96,77% complete, ETA 00:00:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
The Dynamic Halt is NOT Active
Iteration   1: 0,011 ±(99.9%) 0,001 s/op
Iteration   2: 0,012 ±(99.9%) 0,001 s/op
Iteration   3: 0,011 ±(99.9%) 0,009 s/op
Iteration   4: 0,012 ±(99.9%) 0,001 s/op
Iteration   5: 0,011 ±(99.9%) 0,005 s/op
Iteration   6: 0,012 ±(99.9%) 0,001 s/op
Iteration   7: 0,012 ±(99.9%) 0,002 s/op
Iteration   8: 0,012 ±(99.9%) 0,001 s/op
Iteration   9: 0,012 ±(99.9%) 0,001 s/op
Iteration  10: 0,012 ±(99.9%) 0,002 s/op
Iteration  11: 0,011 ±(99.9%) 0,001 s/op
Iteration  12: 0,012 ±(99.9%) 0,005 s/op
Iteration  13: 0,011 ±(99.9%) 0,006 s/op
Iteration  14: 0,012 ±(99.9%) 0,006 s/op
Iteration  15: 0,011 ±(99.9%) 0,001 s/op
Iteration  16: 0,012 ±(99.9%) 0,001 s/op
Iteration  17: 0,012 ±(99.9%) 0,001 s/op
Iteration  18: 0,013 ±(99.9%) 0,001 s/op
Iteration  19: 0,013 ±(99.9%) 0,001 s/op
Iteration  20: 0,013 ±(99.9%) 0,001 s/op
Iteration  21: 0,012 ±(99.9%) 0,002 s/op
Iteration  22: 0,012 ±(99.9%) 0,002 s/op
Iteration  23: 0,011 ±(99.9%) 0,006 s/op
Iteration  24: 0,011 ±(99.9%) 0,007 s/op
Iteration  25: 0,013 ±(99.9%) 0,001 s/op
Iteration  26: 0,013 ±(99.9%) 0,001 s/op
Iteration  27: 0,013 ±(99.9%) 0,001 s/op
Iteration  28: 0,012 ±(99.9%) 0,001 s/op
Iteration  29: 0,012 ±(99.9%) 0,002 s/op
Iteration  30: 0,012 ±(99.9%) 0,001 s/op
Iteration  31: 0,012 ±(99.9%) 0,001 s/op
Iteration  32: 0,012 ±(99.9%) 0,003 s/op
Iteration  33: 0,011 ±(99.9%) 0,001 s/op
Iteration  34: 0,012 ±(99.9%) 0,001 s/op
Iteration  35: 0,012 ±(99.9%) 0,001 s/op
Iteration  36: 0,012 ±(99.9%) 0,001 s/op
Iteration  37: 0,012 ±(99.9%) 0,001 s/op
Iteration  38: 0,012 ±(99.9%) 0,001 s/op
Iteration  39: 0,012 ±(99.9%) 0,003 s/op
Iteration  40: 0,011 ±(99.9%) 0,006 s/op
Iteration  41: 0,012 ±(99.9%) 0,001 s/op
Iteration  42: 0,011 ±(99.9%) 0,007 s/op
Iteration  43: 0,012 ±(99.9%) 0,001 s/op
Iteration  44: 0,011 ±(99.9%) 0,001 s/op
Iteration  45: 0,012 ±(99.9%) 0,003 s/op
Iteration  46: 0,013 ±(99.9%) 0,001 s/op
Iteration  47: 0,012 ±(99.9%) 0,002 s/op
Iteration  48: 0,012 ±(99.9%) 0,005 s/op
Iteration  49: 0,012 ±(99.9%) 0,002 s/op
Iteration  50: 0,011 ±(99.9%) 0,004 s/op

Result "org.openjdk.jmh.it.races.RaceThreadStateIterationTest.test":
  N = 50
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 0 
    [0,010, 0,011) = 0 
    [0,011, 0,011) = 4 
    [0,011, 0,011) = 0 
    [0,011, 0,011) = 4 
    [0,011, 0,012) = 5 
    [0,012, 0,012) = 5 
    [0,012, 0,012) = 6 
    [0,012, 0,012) = 10 
    [0,012, 0,013) = 9 
    [0,013, 0,013) = 7 
    [0,013, 0,013) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,011 s/op
     p(50,0000) =      0,012 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op


# Run complete. Total time: 00:00:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt    Score    Error  Units
RaceThreadStateIterationTest.test           thrpt   50  335,607 ±  6,044  ops/s
RaceThreadStateIterationTest.test            avgt   50    0,012 ±  0,001   s/op
RaceThreadStateIterationTest.test          sample  226    0,012 ±  0,001   s/op
RaceThreadStateIterationTest.test:p0.00    sample         0,010            s/op
RaceThreadStateIterationTest.test:p0.50    sample         0,012            s/op
RaceThreadStateIterationTest.test:p0.90    sample         0,013            s/op
RaceThreadStateIterationTest.test:p0.95    sample         0,013            s/op
RaceThreadStateIterationTest.test:p0.99    sample         0,013            s/op
RaceThreadStateIterationTest.test:p0.999   sample         0,013            s/op
RaceThreadStateIterationTest.test:p0.9999  sample         0,013            s/op
RaceThreadStateIterationTest.test:p1.00    sample         0,013            s/op
RaceThreadStateIterationTest.test              ss   50    0,012 ±  0,001   s/op
