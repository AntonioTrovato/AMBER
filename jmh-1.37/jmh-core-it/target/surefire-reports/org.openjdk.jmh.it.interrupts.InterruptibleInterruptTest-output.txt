# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 100 ms each
# Measurement: 1 iterations, 100 ms each
# Timeout: 1 s per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.interrupts.InterruptibleInterruptTest.test

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: 0,200 ops/s
Iteration   1: 0,200 ops/s


Result "org.openjdk.jmh.it.interrupts.InterruptibleInterruptTest.test":
  0,200 ops/s


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 100 ms each
# Measurement: 1 iterations, 100 ms each
# Timeout: 1 s per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.interrupts.InterruptibleInterruptTest.test

# Run progress: 33,22% complete, ETA 00:00:20
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: 5,003 s/op
Iteration   1: 5,005 s/op


Result "org.openjdk.jmh.it.interrupts.InterruptibleInterruptTest.test":
  5,005 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 100 ms each
# Measurement: 1 iterations, 100 ms each
# Timeout: 1 s per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.interrupts.InterruptibleInterruptTest.test

# Run progress: 66,45% complete, ETA 00:00:10
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: 5,000 s/op
Iteration   1: 5,000 s/op
                 p0.00:   5,000 s/op
                 p0.50:   5,000 s/op
                 p0.90:   5,000 s/op
                 p0.95:   5,000 s/op
                 p0.99:   5,000 s/op
                 p0.999:  5,000 s/op
                 p0.9999: 5,000 s/op
                 p1.00:   5,000 s/op




# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 100 ms each
# Measurement: 1 iterations, 100 ms each
# Timeout: 1 s per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.interrupts.InterruptibleInterruptTest.test

# Run progress: 99,67% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: (benchmark timed out, interrupted 1 times) 1,000 s/op
Iteration   1: (benchmark timed out, interrupted 1 times) 1,003 s/op



# Run complete. Total time: 00:00:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt  Score   Error  Units
InterruptibleInterruptTest.test           thrpt       0,200          ops/s
InterruptibleInterruptTest.test            avgt       5,005           s/op
InterruptibleInterruptTest.test          sample       5,000           s/op
InterruptibleInterruptTest.test:p0.00    sample       5,000           s/op
InterruptibleInterruptTest.test:p0.50    sample       5,000           s/op
InterruptibleInterruptTest.test:p0.90    sample       5,000           s/op
InterruptibleInterruptTest.test:p0.95    sample       5,000           s/op
InterruptibleInterruptTest.test:p0.99    sample       5,000           s/op
InterruptibleInterruptTest.test:p0.999   sample       5,000           s/op
InterruptibleInterruptTest.test:p0.9999  sample       5,000           s/op
InterruptibleInterruptTest.test:p1.00    sample       5,000           s/op
InterruptibleInterruptTest.test              ss       1,003           s/op
