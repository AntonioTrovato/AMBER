# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 2 iterations, 100 ms each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.times.batches.ThreadBatchedBenchHelperTimesTest.test

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
Iteration   1: 16,165 ops/s
Iteration   2: 15,234 ops/s


Result "org.openjdk.jmh.it.times.batches.ThreadBatchedBenchHelperTimesTest.test":
  15,700 ops/s


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 2 iterations, 100 ms each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.times.batches.ThreadBatchedBenchHelperTimesTest.test

# Run progress: 33,22% complete, ETA 00:00:01
# Fork: 1 of 1
The Dynamic Halt is NOT Active
Iteration   1: 0,119 s/op
Iteration   2: 0,123 s/op


Result "org.openjdk.jmh.it.times.batches.ThreadBatchedBenchHelperTimesTest.test":
  0,121 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 2 iterations, 100 ms each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.times.batches.ThreadBatchedBenchHelperTimesTest.test

# Run progress: 66,45% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
Iteration   1: 0,121 s/op
                 p0.00:   0,120 s/op
                 p0.50:   0,121 s/op
                 p0.90:   0,122 s/op
                 p0.95:   0,122 s/op
                 p0.99:   0,122 s/op
                 p0.999:  0,122 s/op
                 p0.9999: 0,122 s/op
                 p1.00:   0,122 s/op

Iteration   2: <failure>

java.lang.AssertionError: Test invocations and Setup3 agree expected:<22> but was:<4>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.openjdk.jmh.it.times.batches.ThreadBatchedBenchHelperTimesTest.tearDownLATEST(ThreadBatchedBenchHelperTimesTest.java:100)
	at org.openjdk.jmh.it.times.batches.jmh_generated.ThreadBatchedBenchHelperTimesTest_test_jmhTest.test_SampleTime(ThreadBatchedBenchHelperTimesTest_test_jmhTest.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)

java.lang.AssertionError: Test invocations and Setup3 agree expected:<22> but was:<4>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.openjdk.jmh.it.times.batches.ThreadBatchedBenchHelperTimesTest.tearDownLATEST(ThreadBatchedBenchHelperTimesTest.java:100)
	at org.openjdk.jmh.it.times.batches.jmh_generated.ThreadBatchedBenchHelperTimesTest_test_jmhTest.test_SampleTime(ThreadBatchedBenchHelperTimesTest_test_jmhTest.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)




# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 2 iterations, 100 ms each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 2 threads
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.times.batches.ThreadBatchedBenchHelperTimesTest.test

# Run progress: 99,67% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
Iteration   1: 0,119 s/op
Iteration   2: 0,120 s/op



# Run complete. Total time: 00:00:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                Mode  Cnt   Score   Error  Units
ThreadBatchedBenchHelperTimesTest.test  thrpt    2  15,700          ops/s
ThreadBatchedBenchHelperTimesTest.test   avgt    2   0,121           s/op
ThreadBatchedBenchHelperTimesTest.test     ss    2   0,120           s/op
