# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.profilers.CompilerProfilerTest.work

# Run progress: 0,00% complete, ETA 00:00:06
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 82,238 ops/s
# Warmup Iteration   2: 82,814 ops/s
# Warmup Iteration   3: 82,594 ops/s
Iteration   1: 82,806 ops/s
                 compiler.time.profiled: 2,000 ms
                 compiler.time.total:    138,000 ms

Iteration   2: 83,366 ops/s
                 compiler.time.profiled: 1,000 ms
                 compiler.time.total:    139,000 ms

Iteration   3: 84,175 ops/s
                 compiler.time.profiled: ≈ 0 ms
                 compiler.time.total:    139,000 ms



Result "org.openjdk.jmh.it.profilers.CompilerProfilerTest.work":
  83,449 ±(99.9%) 12,560 ops/s [Average]
  (min, avg, max) = (82,806, 83,449, 84,175), stdev = 0,688
  CI (99.9%): [70,889, 96,009] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.profilers.CompilerProfilerTest.work:compiler.time.profiled":
  3,000 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (≈ 0, 1,000, 2,000), stdev = 1,000
  CI (99.9%): [3,000, 3,000] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.profilers.CompilerProfilerTest.work:compiler.time.total":
  139,000 ±(99.9%) 0,001 ms [Maximum]
  (min, avg, max) = (138,000, 138,667, 139,000), stdev = 0,577
  CI (99.9%): [139,000, 139,000] (assumes normal distribution)


# Run complete. Total time: 00:00:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                          Mode  Cnt    Score    Error  Units
CompilerProfilerTest.work                         thrpt    3   83,449 ± 12,560  ops/s
CompilerProfilerTest.work:compiler.time.profiled  thrpt    3    3,000              ms
CompilerProfilerTest.work:compiler.time.total     thrpt    3  139,000              ms
