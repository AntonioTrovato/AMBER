# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "test1", 1x "test2" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T

# Run progress: 0,00% complete, ETA 00:00:03
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: 165,886 ops/s
# Warmup Iteration   2: 164,040 ops/s
# Warmup Iteration   3: 164,761 ops/s
# Warmup Iteration   4: 165,774 ops/s
# Warmup Iteration   5: 167,391 ops/s
Iteration   1: 140,862 ops/s
                 test1: 71,609 ops/s
                 test2: 69,253 ops/s

Iteration   2: 161,133 ops/s
                 test1: 80,945 ops/s
                 test2: 80,188 ops/s

Iteration   3: 158,871 ops/s
                 test1: 78,823 ops/s
                 test2: 80,047 ops/s

Iteration   4: 167,179 ops/s
                 test1: 83,941 ops/s
                 test2: 83,238 ops/s

Iteration   5: 167,260 ops/s
                 test1: 83,564 ops/s
                 test2: 83,695 ops/s



Result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T":
  159,061 ±(99.9%) 41,681 ops/s [Average]
  (min, avg, max) = (140,862, 159,061, 167,260), stdev = 10,824
  CI (99.9%): [117,380, 200,742] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T:test1":
  79,777 ±(99.9%) 19,318 ops/s [Average]
  (min, avg, max) = (71,609, 79,777, 83,941), stdev = 5,017
  CI (99.9%): [60,459, 99,094] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T:test2":
  79,284 ±(99.9%) 22,546 ops/s [Average]
  (min, avg, max) = (69,253, 79,284, 83,695), stdev = 5,855
  CI (99.9%): [56,739, 101,830] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "test1", 1x "test2" in each group), will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T

# Run progress: 33,22% complete, ETA 00:00:05
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: 0,013 s/op
# Warmup Iteration   2: 0,013 s/op
# Warmup Iteration   3: 0,012 s/op
# Warmup Iteration   4: 0,014 s/op
# Warmup Iteration   5: 0,012 s/op
Iteration   1: 0,012 s/op
                 test1: 0,012 s/op
                 test2: 0,012 s/op

Iteration   2: 0,012 s/op
                 test1: 0,012 s/op
                 test2: 0,012 s/op

Iteration   3: 0,012 s/op
                 test1: 0,012 s/op
                 test2: 0,012 s/op

Iteration   4: 0,012 s/op
                 test1: 0,012 s/op
                 test2: 0,012 s/op

Iteration   5: 0,012 s/op
                 test1: 0,012 s/op
                 test2: 0,012 s/op



Result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T":
  0,012 ±(99.9%) 0,001 s/op [Average]
  (min, avg, max) = (0,012, 0,012, 0,012), stdev = 0,001
  CI (99.9%): [0,011, 0,013] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T:test1":
  0,012 ±(99.9%) 0,002 s/op [Average]
  (min, avg, max) = (0,012, 0,012, 0,012), stdev = 0,001
  CI (99.9%): [0,011, 0,014] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T:test2":
  0,012 ±(99.9%) 0,001 s/op [Average]
  (min, avg, max) = (0,012, 0,012, 0,012), stdev = 0,001
  CI (99.9%): [0,011, 0,012] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "test1", 1x "test2" in each group), will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T

# Run progress: 66,45% complete, ETA 00:00:02
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: 0,012 ±(99.9%) 0,001 s/op
# Warmup Iteration   2: 0,012 ±(99.9%) 0,001 s/op
# Warmup Iteration   3: 0,012 ±(99.9%) 0,001 s/op
# Warmup Iteration   4: 0,012 ±(99.9%) 0,001 s/op
# Warmup Iteration   5: 0,012 ±(99.9%) 0,001 s/op
Iteration   1: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:         0,010 s/op
                 p0.50:         0,013 s/op
                 p0.90:         0,013 s/op
                 p0.95:         0,013 s/op
                 p0.99:         0,013 s/op
                 p0.999:        0,013 s/op
                 p0.9999:       0,013 s/op
                 p1.00:         0,013 s/op
                 test1:         0,012 ±(99.9%) 0,001 s/op
                 test1:p0.00:   0,011 s/op
                 test1:p0.50:   0,013 s/op
                 test1:p0.90:   0,013 s/op
                 test1:p0.95:   0,013 s/op
                 test1:p0.99:   0,013 s/op
                 test1:p0.999:  0,013 s/op
                 test1:p0.9999: 0,013 s/op
                 test1:p1.00:   0,013 s/op
                 test2:         0,012 ±(99.9%) 0,002 s/op
                 test2:p0.00:   0,010 s/op
                 test2:p0.50:   0,013 s/op
                 test2:p0.90:   0,013 s/op
                 test2:p0.95:   0,013 s/op
                 test2:p0.99:   0,013 s/op
                 test2:p0.999:  0,013 s/op
                 test2:p0.9999: 0,013 s/op
                 test2:p1.00:   0,013 s/op

Iteration   2: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:         0,010 s/op
                 p0.50:         0,012 s/op
                 p0.90:         0,013 s/op
                 p0.95:         0,013 s/op
                 p0.99:         0,013 s/op
                 p0.999:        0,013 s/op
                 p0.9999:       0,013 s/op
                 p1.00:         0,013 s/op
                 test1:         0,012 ±(99.9%) 0,002 s/op
                 test1:p0.00:   0,010 s/op
                 test1:p0.50:   0,012 s/op
                 test1:p0.90:   0,013 s/op
                 test1:p0.95:   0,013 s/op
                 test1:p0.99:   0,013 s/op
                 test1:p0.999:  0,013 s/op
                 test1:p0.9999: 0,013 s/op
                 test1:p1.00:   0,013 s/op
                 test2:         0,012 ±(99.9%) 0,001 s/op
                 test2:p0.00:   0,011 s/op
                 test2:p0.50:   0,013 s/op
                 test2:p0.90:   0,013 s/op
                 test2:p0.95:   0,013 s/op
                 test2:p0.99:   0,013 s/op
                 test2:p0.999:  0,013 s/op
                 test2:p0.9999: 0,013 s/op
                 test2:p1.00:   0,013 s/op

Iteration   3: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:         0,010 s/op
                 p0.50:         0,013 s/op
                 p0.90:         0,013 s/op
                 p0.95:         0,013 s/op
                 p0.99:         0,013 s/op
                 p0.999:        0,013 s/op
                 p0.9999:       0,013 s/op
                 p1.00:         0,013 s/op
                 test1:         0,012 ±(99.9%) 0,002 s/op
                 test1:p0.00:   0,010 s/op
                 test1:p0.50:   0,013 s/op
                 test1:p0.90:   0,013 s/op
                 test1:p0.95:   0,013 s/op
                 test1:p0.99:   0,013 s/op
                 test1:p0.999:  0,013 s/op
                 test1:p0.9999: 0,013 s/op
                 test1:p1.00:   0,013 s/op
                 test2:         0,012 ±(99.9%) 0,001 s/op
                 test2:p0.00:   0,010 s/op
                 test2:p0.50:   0,012 s/op
                 test2:p0.90:   0,013 s/op
                 test2:p0.95:   0,013 s/op
                 test2:p0.99:   0,013 s/op
                 test2:p0.999:  0,013 s/op
                 test2:p0.9999: 0,013 s/op
                 test2:p1.00:   0,013 s/op

Iteration   4: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:         0,010 s/op
                 p0.50:         0,013 s/op
                 p0.90:         0,013 s/op
                 p0.95:         0,013 s/op
                 p0.99:         0,013 s/op
                 p0.999:        0,013 s/op
                 p0.9999:       0,013 s/op
                 p1.00:         0,013 s/op
                 test1:         0,012 ±(99.9%) 0,001 s/op
                 test1:p0.00:   0,010 s/op
                 test1:p0.50:   0,013 s/op
                 test1:p0.90:   0,013 s/op
                 test1:p0.95:   0,013 s/op
                 test1:p0.99:   0,013 s/op
                 test1:p0.999:  0,013 s/op
                 test1:p0.9999: 0,013 s/op
                 test1:p1.00:   0,013 s/op
                 test2:         0,012 ±(99.9%) 0,002 s/op
                 test2:p0.00:   0,010 s/op
                 test2:p0.50:   0,012 s/op
                 test2:p0.90:   0,013 s/op
                 test2:p0.95:   0,013 s/op
                 test2:p0.99:   0,013 s/op
                 test2:p0.999:  0,013 s/op
                 test2:p0.9999: 0,013 s/op
                 test2:p1.00:   0,013 s/op

Iteration   5: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:         0,011 s/op
                 p0.50:         0,013 s/op
                 p0.90:         0,013 s/op
                 p0.95:         0,013 s/op
                 p0.99:         0,013 s/op
                 p0.999:        0,013 s/op
                 p0.9999:       0,013 s/op
                 p1.00:         0,013 s/op
                 test1:         0,012 ±(99.9%) 0,001 s/op
                 test1:p0.00:   0,011 s/op
                 test1:p0.50:   0,013 s/op
                 test1:p0.90:   0,013 s/op
                 test1:p0.95:   0,013 s/op
                 test1:p0.99:   0,013 s/op
                 test1:p0.999:  0,013 s/op
                 test1:p0.9999: 0,013 s/op
                 test1:p1.00:   0,013 s/op
                 test2:         0,012 ±(99.9%) 0,001 s/op
                 test2:p0.00:   0,011 s/op
                 test2:p0.50:   0,013 s/op
                 test2:p0.90:   0,013 s/op
                 test2:p0.95:   0,013 s/op
                 test2:p0.99:   0,013 s/op
                 test2:p0.999:  0,013 s/op
                 test2:p0.9999: 0,013 s/op
                 test2:p1.00:   0,013 s/op



Result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T":
  N = 85
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 5 
    [0,010, 0,011) = 1 
    [0,011, 0,011) = 2 
    [0,011, 0,011) = 3 
    [0,011, 0,011) = 6 
    [0,011, 0,012) = 1 
    [0,012, 0,012) = 2 
    [0,012, 0,012) = 7 
    [0,012, 0,012) = 3 
    [0,012, 0,013) = 7 
    [0,013, 0,013) = 46 
    [0,013, 0,013) = 0 
    [0,013, 0,013) = 2 
    [0,013, 0,014) = 0 
    [0,014, 0,014) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,010 s/op
     p(50,0000) =      0,013 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op

Secondary result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T:test1":
  N = 42
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 2 
    [0,010, 0,011) = 1 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 2 
    [0,011, 0,011) = 3 
    [0,011, 0,012) = 1 
    [0,012, 0,012) = 1 
    [0,012, 0,012) = 2 
    [0,012, 0,012) = 1 
    [0,012, 0,013) = 6 
    [0,013, 0,013) = 21 
    [0,013, 0,013) = 0 
    [0,013, 0,013) = 1 
    [0,013, 0,014) = 0 
    [0,014, 0,014) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,010 s/op
     p(50,0000) =      0,013 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op

Secondary result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T:test2":
  N = 43
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 3 
    [0,010, 0,011) = 0 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 3 
    [0,011, 0,012) = 0 
    [0,012, 0,012) = 1 
    [0,012, 0,012) = 5 
    [0,012, 0,012) = 2 
    [0,012, 0,013) = 1 
    [0,013, 0,013) = 25 
    [0,013, 0,013) = 0 
    [0,013, 0,013) = 1 
    [0,013, 0,014) = 0 
    [0,014, 0,014) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,010 s/op
     p(50,0000) =      0,013 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "test1", 1x "test2" in each group)
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T

# Run progress: 99,67% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: 0,013 s/op
# Warmup Iteration   2: 0,012 s/op
# Warmup Iteration   3: 0,012 s/op
# Warmup Iteration   4: 0,013 s/op
# Warmup Iteration   5: 0,011 s/op
Iteration   1: 0,013 s/op
                 test1: 0,013 s/op
                 test2: 0,013 s/op

Iteration   2: 0,012 s/op
                 test1: 0,011 s/op
                 test2: 0,013 s/op

Iteration   3: 0,013 s/op
                 test1: 0,013 s/op
                 test2: 0,013 s/op

Iteration   4: 0,012 s/op
                 test1: 0,012 s/op
                 test2: 0,013 s/op

Iteration   5: 0,011 s/op
                 test1: 0,011 s/op
                 test2: 0,011 s/op



Result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T":
  N = 5
  mean =      0,012 ±(99.9%) 0,003 s/op

  Histogram, s/op:
    [0,010, 0,010) = 0 
    [0,010, 0,011) = 0 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 0 
    [0,011, 0,011) = 0 
    [0,011, 0,012) = 0 
    [0,012, 0,012) = 1 
    [0,012, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,013) = 1 
    [0,013, 0,013) = 2 
    [0,013, 0,013) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,011 s/op
     p(50,0000) =      0,012 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op

Secondary result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T:test1":
  N = 5
  mean =      0,012 ±(99.9%) 0,004 s/op

  Histogram, s/op:
    [0,010, 0,010) = 0 
    [0,010, 0,011) = 0 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 0 
    [0,011, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,013) = 1 
    [0,013, 0,013) = 2 
    [0,013, 0,013) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,011 s/op
     p(50,0000) =      0,012 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op

Secondary result "org.openjdk.jmh.it.times.GroupThreadStateHelperTimesTest.T:test2":
  N = 5
  mean =      0,012 ±(99.9%) 0,003 s/op

  Histogram, s/op:
    [0,010, 0,010) = 0 
    [0,010, 0,011) = 0 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 0 
    [0,011, 0,011) = 0 
    [0,011, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,013) = 0 
    [0,013, 0,013) = 4 
    [0,013, 0,013) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,011 s/op
     p(50,0000) =      0,013 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,013 s/op
     p(99,9000) =      0,013 s/op
     p(99,9900) =      0,013 s/op
     p(99,9990) =      0,013 s/op
     p(99,9999) =      0,013 s/op
    p(100,0000) =      0,013 s/op


# Run complete. Total time: 00:00:08

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                          Mode  Cnt    Score    Error  Units
GroupThreadStateHelperTimesTest.T                 thrpt    5  159,061 ± 41,681  ops/s
GroupThreadStateHelperTimesTest.T:test1           thrpt    5   79,777 ± 19,318  ops/s
GroupThreadStateHelperTimesTest.T:test2           thrpt    5   79,284 ± 22,546  ops/s
GroupThreadStateHelperTimesTest.T                  avgt    5    0,012 ±  0,001   s/op
GroupThreadStateHelperTimesTest.T:test1            avgt    5    0,012 ±  0,002   s/op
GroupThreadStateHelperTimesTest.T:test2            avgt    5    0,012 ±  0,001   s/op
GroupThreadStateHelperTimesTest.T                sample   85    0,012 ±  0,001   s/op
GroupThreadStateHelperTimesTest.T:p0.00          sample         0,010            s/op
GroupThreadStateHelperTimesTest.T:p0.50          sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:p0.90          sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:p0.95          sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:p0.99          sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:p0.999         sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:p0.9999        sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:p1.00          sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test1          sample   42    0,012 ±  0,001   s/op
GroupThreadStateHelperTimesTest.T:test1:p0.00    sample         0,010            s/op
GroupThreadStateHelperTimesTest.T:test1:p0.50    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test1:p0.90    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test1:p0.95    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test1:p0.99    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test1:p0.999   sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test1:p0.9999  sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test1:p1.00    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test2          sample   43    0,012 ±  0,001   s/op
GroupThreadStateHelperTimesTest.T:test2:p0.00    sample         0,010            s/op
GroupThreadStateHelperTimesTest.T:test2:p0.50    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test2:p0.90    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test2:p0.95    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test2:p0.99    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test2:p0.999   sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test2:p0.9999  sample         0,013            s/op
GroupThreadStateHelperTimesTest.T:test2:p1.00    sample         0,013            s/op
GroupThreadStateHelperTimesTest.T                    ss    5    0,012 ±  0,003   s/op
GroupThreadStateHelperTimesTest.T:test1              ss    5    0,012 ±  0,004   s/op
GroupThreadStateHelperTimesTest.T:test2              ss    5    0,012 ±  0,003   s/op
