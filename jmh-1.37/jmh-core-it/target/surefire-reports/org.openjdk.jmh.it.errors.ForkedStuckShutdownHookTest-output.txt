# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 ms each
# Measurement: 1 iterations, 10 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.errors.ForkedStuckShutdownHookTest.bench

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 1
The Dynamic Halt is NOT Active
# Warmup Iteration   1: 81,431 ops/s
Iteration   1: 79,786 ops/s
<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.lang.Object.wait(Native Method)
  at java.lang.Thread.join(Thread.java:1257)
  at java.lang.Thread.join(Thread.java:1331)
  at java.lang.ApplicationShutdownHooks.runHooks(ApplicationShutdownHooks.java:107)
  at java.lang.ApplicationShutdownHooks$1.run(ApplicationShutdownHooks.java:46)
  at java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.lang.Shutdown.shutdown(Shutdown.java:190)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.lang.Object.wait(Native Method)
  at java.lang.Thread.join(Thread.java:1257)
  at java.lang.Thread.join(Thread.java:1331)
  at java.lang.ApplicationShutdownHooks.runHooks(ApplicationShutdownHooks.java:107)
  at java.lang.ApplicationShutdownHooks$1.run(ApplicationShutdownHooks.java:46)
  at java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.lang.Shutdown.shutdown(Shutdown.java:190)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.lang.Object.wait(Native Method)
  at java.lang.Thread.join(Thread.java:1257)
  at java.lang.Thread.join(Thread.java:1331)
  at java.lang.ApplicationShutdownHooks.runHooks(ApplicationShutdownHooks.java:107)
  at java.lang.ApplicationShutdownHooks$1.run(ApplicationShutdownHooks.java:46)
  at java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.lang.Shutdown.shutdown(Shutdown.java:190)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.lang.Object.wait(Native Method)
  at java.lang.Thread.join(Thread.java:1257)
  at java.lang.Thread.join(Thread.java:1331)
  at java.lang.ApplicationShutdownHooks.runHooks(ApplicationShutdownHooks.java:107)
  at java.lang.ApplicationShutdownHooks$1.run(ApplicationShutdownHooks.java:46)
  at java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.lang.Shutdown.shutdown(Shutdown.java:190)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.lang.Object.wait(Native Method)
  at java.lang.Thread.join(Thread.java:1257)
  at java.lang.Thread.join(Thread.java:1331)
  at java.lang.ApplicationShutdownHooks.runHooks(ApplicationShutdownHooks.java:107)
  at java.lang.ApplicationShutdownHooks$1.run(ApplicationShutdownHooks.java:46)
  at java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.lang.Shutdown.shutdown(Shutdown.java:190)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[DestroyJavaVM,5,main]
  at java.lang.Object.wait(Native Method)
  at java.lang.Thread.join(Thread.java:1257)
  at java.lang.Thread.join(Thread.java:1331)
  at java.lang.ApplicationShutdownHooks.runHooks(ApplicationShutdownHooks.java:107)
  at java.lang.ApplicationShutdownHooks$1.run(ApplicationShutdownHooks.java:46)
  at java.lang.Shutdown.runHooks(Shutdown.java:130)
  at java.lang.Shutdown.shutdown(Shutdown.java:190)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "org.openjdk.jmh.it.errors.ForkedStuckShutdownHookTest.bench":
  79,786 ops/s


# Run complete. Total time: 00:00:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt   Score   Error  Units
ForkedStuckShutdownHookTest.bench  thrpt       79,786          ops/s
