# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "ping", 1x "pong" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.control.ControlStopTest.pingpong

# Run progress: 0,00% complete, ETA 00:00:05
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 1501511,282 ops/s
# Warmup Iteration   2: 113221,338 ops/s
# Warmup Iteration   3: 1264232,384 ops/s
# Warmup Iteration   4: 1600009,909 ops/s
# Warmup Iteration   5: 1090522,449 ops/s
Iteration   1: 1600009,518 ops/s
                 ping: 1600000,000 ops/s
                 pong: 9,518 ops/s

Iteration   2: 1412438,897 ops/s
                 ping: 9,519 ops/s
                 pong: 1412429,379 ops/s

Iteration   3: 1333343,197 ops/s
                 ping: 9,864 ops/s
                 pong: 1333333,333 ops/s

Iteration   4: 1091712,726 ops/s
                 ping: 9,670 ops/s
                 pong: 1091703,057 ops/s

Iteration   5: 959702,401 ops/s
                 ping: 959692,898 ops/s
                 pong: 9,503 ops/s


# Run progress: 20,00% complete, ETA 00:00:04
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 413916,610 ops/s
# Warmup Iteration   2: 1848438,776 ops/s
# Warmup Iteration   3: 1499259,893 ops/s
# Warmup Iteration   4: 1412439,173 ops/s
# Warmup Iteration   5: 1091712,573 ops/s
Iteration   1: 1333342,853 ops/s
                 ping: 9,519 ops/s
                 pong: 1333333,333 ops/s

Iteration   2: 1200490,136 ops/s
                 ping: 9,944 ops/s
                 pong: 1200480,192 ops/s

Iteration   3: 19,902 ops/s
                 ping: 9,951 ops/s
                 pong: 9,951 ops/s

Iteration   4: 1090522,061 ops/s
                 ping: 1090512,541 ops/s
                 pong: 9,520 ops/s

Iteration   5: 615394,243 ops/s
                 ping: 9,628 ops/s
                 pong: 615384,615 ops/s


# Run progress: 40,00% complete, ETA 00:00:03
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 1712338,475 ops/s
# Warmup Iteration   2: 2000009,520 ops/s
# Warmup Iteration   3: 1499260,092 ops/s
# Warmup Iteration   4: 774003,392 ops/s
# Warmup Iteration   5: 1412439,307 ops/s
Iteration   1: 1499260,219 ops/s
                 ping: 9,844 ops/s
                 pong: 1499250,375 ops/s

Iteration   2: 1600009,631 ops/s
                 ping: 9,631 ops/s
                 pong: 1600000,000 ops/s

Iteration   3: 1410447,089 ops/s
                 ping: 1410437,236 ops/s
                 pong: 9,853 ops/s

Iteration   4: 1410446,857 ops/s
                 ping: 9,622 ops/s
                 pong: 1410437,236 ops/s

Iteration   5: 2666676,187 ops/s
                 ping: 9,520 ops/s
                 pong: 2666666,667 ops/s


# Run progress: 60,00% complete, ETA 00:00:02
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 19,146 ops/s
# Warmup Iteration   2: 1712338,593 ops/s
# Warmup Iteration   3: 1333342,854 ops/s
# Warmup Iteration   4: 571438,088 ops/s
# Warmup Iteration   5: 1501511,145 ops/s
Iteration   1: 1712338,754 ops/s
                 ping: 1712328,767 ops/s
                 pong: 9,987 ops/s

Iteration   2: 1712338,287 ops/s
                 ping: 1712328,767 ops/s
                 pong: 9,520 ops/s

Iteration   3: 1410446,926 ops/s
                 ping: 1410437,236 ops/s
                 pong: 9,690 ops/s

Iteration   4: 1142866,663 ops/s
                 ping: 9,520 ops/s
                 pong: 1142857,143 ops/s

Iteration   5: 1262636,192 ops/s
                 ping: 9,929 ops/s
                 pong: 1262626,263 ops/s


# Run progress: 80,00% complete, ETA 00:00:01
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 1845027,864 ops/s
# Warmup Iteration   2: 1600009,518 ops/s
# Warmup Iteration   3: 1262635,781 ops/s
# Warmup Iteration   4: 85421,205 ops/s
# Warmup Iteration   5: 1499259,893 ops/s
Iteration   1: 1200490,070 ops/s
                 ping: 1200480,192 ops/s
                 pong: 9,878 ops/s

Iteration   2: 2000009,519 ops/s
                 ping: 9,519 ops/s
                 pong: 2000000,000 ops/s

Iteration   3: 1600009,831 ops/s
                 ping: 9,831 ops/s
                 pong: 1600000,000 ops/s

Iteration   4: 1499259,892 ops/s
                 ping: 1499250,375 ops/s
                 pong: 9,517 ops/s

Iteration   5: 61078,221 ops/s
                 ping: 61068,702 ops/s
                 pong: 9,519 ops/s



Result "org.openjdk.jmh.it.control.ControlStopTest.pingpong":
  1313011,611 ±(99.9%) 405618,132 ops/s [Average]
  (min, avg, max) = (19,902, 1313011,611, 2666676,187), stdev = 541488,601
  CI (99.9%): [907393,479, 1718629,743] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.control.ControlStopTest.pingpong:ping":
  506267,289 ±(99.9%) 525202,378 ops/s [Average]
  (min, avg, max) = (9,519, 506267,289, 1712328,767), stdev = 701130,148
  CI (99.9%): [≈ 0, 1031469,667] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.control.ControlStopTest.pingpong:pong":
  806744,322 ±(99.9%) 605084,038 ops/s [Average]
  (min, avg, max) = (9,503, 806744,322, 2666666,667), stdev = 807769,880
  CI (99.9%): [201660,283, 1411828,360] (assumes normal distribution)


# Run complete. Total time: 00:00:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       Mode  Cnt        Score        Error  Units
ControlStopTest.pingpong       thrpt   25  1313011,611 ± 405618,132  ops/s
ControlStopTest.pingpong:ping  thrpt   25   506267,289 ± 525202,378  ops/s
ControlStopTest.pingpong:pong  thrpt   25   806744,322 ± 605084,038  ops/s
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "ping", 1x "pong" in each group), will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.control.ControlStopTest.pingpong

# Run progress: 0,00% complete, ETA 00:00:05
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,052 s/op
# Warmup Iteration   2: 0,053 s/op
# Warmup Iteration   3: 0,050 s/op
# Warmup Iteration   4: 0,051 s/op
# Warmup Iteration   5: 0,051 s/op
Iteration   1: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op

Iteration   2: 0,050 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,101 s/op

Iteration   3: 0,052 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,103 s/op

Iteration   4: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op

Iteration   5: 0,051 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,101 s/op


# Run progress: 20,00% complete, ETA 00:00:04
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,051 s/op
# Warmup Iteration   2: 0,053 s/op
# Warmup Iteration   3: 0,053 s/op
# Warmup Iteration   4: 0,051 s/op
# Warmup Iteration   5: 0,052 s/op
Iteration   1: 0,051 s/op
                 ping: 0,102 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   2: 0,053 s/op
                 ping: 0,105 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   3: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op

Iteration   4: 0,051 s/op
                 ping: 0,103 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   5: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op


# Run progress: 40,00% complete, ETA 00:00:03
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,053 s/op
# Warmup Iteration   2: 0,053 s/op
# Warmup Iteration   3: 0,051 s/op
# Warmup Iteration   4: 0,053 s/op
# Warmup Iteration   5: 0,050 s/op
Iteration   1: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op

Iteration   2: 0,051 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,101 s/op

Iteration   3: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op

Iteration   4: 0,052 s/op
                 ping: 0,104 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   5: 0,052 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,104 s/op


# Run progress: 60,00% complete, ETA 00:00:02
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,053 s/op
# Warmup Iteration   2: 0,050 s/op
# Warmup Iteration   3: 0,050 s/op
# Warmup Iteration   4: 0,053 s/op
# Warmup Iteration   5: 0,053 s/op
Iteration   1: 0,051 s/op
                 ping: 0,103 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   2: 0,050 s/op
                 ping: 0,100 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   3: 0,053 s/op
                 ping: 0,105 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   4: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op

Iteration   5: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op


# Run progress: 80,00% complete, ETA 00:00:01
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,053 s/op
# Warmup Iteration   2: 0,051 s/op
# Warmup Iteration   3: 0,052 s/op
# Warmup Iteration   4: 0,051 s/op
# Warmup Iteration   5: 0,053 s/op
Iteration   1: 0,052 s/op
                 ping: 0,104 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   2: 0,051 s/op
                 ping: 0,102 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   3: 0,053 s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: 0,105 s/op

Iteration   4: 0,052 s/op
                 ping: 0,103 s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   5: 0,053 s/op
                 ping: 0,105 s/op
                 pong: ≈ 10⁻⁶ s/op



Result "org.openjdk.jmh.it.control.ControlStopTest.pingpong":
  0,052 ±(99.9%) 0,001 s/op [Average]
  (min, avg, max) = (0,050, 0,052, 0,053), stdev = 0,001
  CI (99.9%): [0,051, 0,052] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.control.ControlStopTest.pingpong:ping":
  0,045 ±(99.9%) 0,039 s/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0,045, 0,105), stdev = 0,052
  CI (99.9%): [0,006, 0,085] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.control.ControlStopTest.pingpong:pong":
  0,058 ±(99.9%) 0,039 s/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0,058, 0,105), stdev = 0,053
  CI (99.9%): [0,019, 0,098] (assumes normal distribution)


# Run complete. Total time: 00:00:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      Mode  Cnt  Score   Error  Units
ControlStopTest.pingpong       avgt   25  0,052 ± 0,001   s/op
ControlStopTest.pingpong:ping  avgt   25  0,045 ± 0,039   s/op
ControlStopTest.pingpong:pong  avgt   25  0,058 ± 0,039   s/op
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "ping", 1x "pong" in each group), will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.control.ControlStopTest.pingpong

# Run progress: 0,00% complete, ETA 00:00:05
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,049 s/op
# Warmup Iteration   2: 0,052 s/op
# Warmup Iteration   3: 0,052 s/op
# Warmup Iteration   4: 0,052 s/op
# Warmup Iteration   5: 0,052 s/op
Iteration   1: 0,050 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,050 s/op
                 p0.90:        0,100 s/op
                 p0.95:        0,100 s/op
                 p0.99:        0,100 s/op
                 p0.999:       0,100 s/op
                 p0.9999:      0,100 s/op
                 p1.00:        0,100 s/op
                 ping:         0,100 s/op
                 ping:p0.00:   0,100 s/op
                 ping:p0.50:   0,100 s/op
                 ping:p0.90:   0,100 s/op
                 ping:p0.95:   0,100 s/op
                 ping:p0.99:   0,100 s/op
                 ping:p0.999:  0,100 s/op
                 ping:p0.9999: 0,100 s/op
                 ping:p1.00:   0,100 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   2: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,104 s/op
                 p0.95:        0,104 s/op
                 p0.99:        0,104 s/op
                 p0.999:       0,104 s/op
                 p0.9999:      0,104 s/op
                 p1.00:        0,104 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,104 s/op
                 pong:p0.00:   0,104 s/op
                 pong:p0.50:   0,104 s/op
                 pong:p0.90:   0,104 s/op
                 pong:p0.95:   0,104 s/op
                 pong:p0.99:   0,104 s/op
                 pong:p0.999:  0,104 s/op
                 pong:p0.9999: 0,104 s/op
                 pong:p1.00:   0,104 s/op

Iteration   3: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         0,105 s/op
                 ping:p0.00:   0,105 s/op
                 ping:p0.50:   0,105 s/op
                 ping:p0.90:   0,105 s/op
                 ping:p0.95:   0,105 s/op
                 ping:p0.99:   0,105 s/op
                 ping:p0.999:  0,105 s/op
                 ping:p0.9999: 0,105 s/op
                 ping:p1.00:   0,105 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   4: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,105 s/op
                 pong:p0.00:   0,105 s/op
                 pong:p0.50:   0,105 s/op
                 pong:p0.90:   0,105 s/op
                 pong:p0.95:   0,105 s/op
                 pong:p0.99:   0,105 s/op
                 pong:p0.999:  0,105 s/op
                 pong:p0.9999: 0,105 s/op
                 pong:p1.00:   0,105 s/op

Iteration   5: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,105 s/op
                 pong:p0.00:   0,105 s/op
                 pong:p0.50:   0,105 s/op
                 pong:p0.90:   0,105 s/op
                 pong:p0.95:   0,105 s/op
                 pong:p0.99:   0,105 s/op
                 pong:p0.999:  0,105 s/op
                 pong:p0.9999: 0,105 s/op
                 pong:p1.00:   0,105 s/op


# Run progress: 20,00% complete, ETA 00:00:04
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,049 s/op
# Warmup Iteration   2: 0,052 s/op
# Warmup Iteration   3: 0,052 s/op
# Warmup Iteration   4: 0,050 s/op
# Warmup Iteration   5: 0,052 s/op
Iteration   1: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,104 s/op
                 p0.95:        0,104 s/op
                 p0.99:        0,104 s/op
                 p0.999:       0,104 s/op
                 p0.9999:      0,104 s/op
                 p1.00:        0,104 s/op
                 ping:         0,104 s/op
                 ping:p0.00:   0,104 s/op
                 ping:p0.50:   0,104 s/op
                 ping:p0.90:   0,104 s/op
                 ping:p0.95:   0,104 s/op
                 ping:p0.99:   0,104 s/op
                 ping:p0.999:  0,104 s/op
                 ping:p0.9999: 0,104 s/op
                 ping:p1.00:   0,104 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   2: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         0,105 s/op
                 ping:p0.00:   0,105 s/op
                 ping:p0.50:   0,105 s/op
                 ping:p0.90:   0,105 s/op
                 ping:p0.95:   0,105 s/op
                 ping:p0.99:   0,105 s/op
                 ping:p0.999:  0,105 s/op
                 ping:p0.9999: 0,105 s/op
                 ping:p1.00:   0,105 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   3: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         0,105 s/op
                 ping:p0.00:   0,105 s/op
                 ping:p0.50:   0,105 s/op
                 ping:p0.90:   0,105 s/op
                 ping:p0.95:   0,105 s/op
                 ping:p0.99:   0,105 s/op
                 ping:p0.999:  0,105 s/op
                 ping:p0.9999: 0,105 s/op
                 ping:p1.00:   0,105 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   4: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,103 s/op
                 p0.95:        0,103 s/op
                 p0.99:        0,103 s/op
                 p0.999:       0,103 s/op
                 p0.9999:      0,103 s/op
                 p1.00:        0,103 s/op
                 ping:         0,103 s/op
                 ping:p0.00:   0,103 s/op
                 ping:p0.50:   0,103 s/op
                 ping:p0.90:   0,103 s/op
                 ping:p0.95:   0,103 s/op
                 ping:p0.99:   0,103 s/op
                 ping:p0.999:  0,103 s/op
                 ping:p0.9999: 0,103 s/op
                 ping:p1.00:   0,103 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   5: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         0,105 s/op
                 ping:p0.00:   0,105 s/op
                 ping:p0.50:   0,105 s/op
                 ping:p0.90:   0,105 s/op
                 ping:p0.95:   0,105 s/op
                 ping:p0.99:   0,105 s/op
                 ping:p0.999:  0,105 s/op
                 ping:p0.9999: 0,105 s/op
                 ping:p1.00:   0,105 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op


# Run progress: 40,00% complete, ETA 00:00:03
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,050 s/op
# Warmup Iteration   2: 0,050 s/op
# Warmup Iteration   3: 0,052 s/op
# Warmup Iteration   4: 0,051 s/op
# Warmup Iteration   5: 0,052 s/op
Iteration   1: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         0,105 s/op
                 ping:p0.00:   0,105 s/op
                 ping:p0.50:   0,105 s/op
                 ping:p0.90:   0,105 s/op
                 ping:p0.95:   0,105 s/op
                 ping:p0.99:   0,105 s/op
                 ping:p0.999:  0,105 s/op
                 ping:p0.9999: 0,105 s/op
                 ping:p1.00:   0,105 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   2: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,104 s/op
                 p0.95:        0,104 s/op
                 p0.99:        0,104 s/op
                 p0.999:       0,104 s/op
                 p0.9999:      0,104 s/op
                 p1.00:        0,104 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,104 s/op
                 pong:p0.00:   0,104 s/op
                 pong:p0.50:   0,104 s/op
                 pong:p0.90:   0,104 s/op
                 pong:p0.95:   0,104 s/op
                 pong:p0.99:   0,104 s/op
                 pong:p0.999:  0,104 s/op
                 pong:p0.9999: 0,104 s/op
                 pong:p1.00:   0,104 s/op

Iteration   3: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,105 s/op
                 pong:p0.00:   0,105 s/op
                 pong:p0.50:   0,105 s/op
                 pong:p0.90:   0,105 s/op
                 pong:p0.95:   0,105 s/op
                 pong:p0.99:   0,105 s/op
                 pong:p0.999:  0,105 s/op
                 pong:p0.9999: 0,105 s/op
                 pong:p1.00:   0,105 s/op

Iteration   4: 0,051 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,051 s/op
                 p0.90:        0,103 s/op
                 p0.95:        0,103 s/op
                 p0.99:        0,103 s/op
                 p0.999:       0,103 s/op
                 p0.9999:      0,103 s/op
                 p1.00:        0,103 s/op
                 ping:         0,103 s/op
                 ping:p0.00:   0,103 s/op
                 ping:p0.50:   0,103 s/op
                 ping:p0.90:   0,103 s/op
                 ping:p0.95:   0,103 s/op
                 ping:p0.99:   0,103 s/op
                 ping:p0.999:  0,103 s/op
                 ping:p0.9999: 0,103 s/op
                 ping:p1.00:   0,103 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   5: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         0,105 s/op
                 ping:p0.00:   0,105 s/op
                 ping:p0.50:   0,105 s/op
                 ping:p0.90:   0,105 s/op
                 ping:p0.95:   0,105 s/op
                 ping:p0.99:   0,105 s/op
                 ping:p0.999:  0,105 s/op
                 ping:p0.9999: 0,105 s/op
                 ping:p1.00:   0,105 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op


# Run progress: 60,00% complete, ETA 00:00:02
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,052 s/op
# Warmup Iteration   2: 0,052 s/op
# Warmup Iteration   3: 0,050 s/op
# Warmup Iteration   4: 0,052 s/op
# Warmup Iteration   5: 0,052 s/op
Iteration   1: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,105 s/op
                 pong:p0.00:   0,105 s/op
                 pong:p0.50:   0,105 s/op
                 pong:p0.90:   0,105 s/op
                 pong:p0.95:   0,105 s/op
                 pong:p0.99:   0,105 s/op
                 pong:p0.999:  0,105 s/op
                 pong:p0.9999: 0,105 s/op
                 pong:p1.00:   0,105 s/op

Iteration   2: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         0,105 s/op
                 ping:p0.00:   0,105 s/op
                 ping:p0.50:   0,105 s/op
                 ping:p0.90:   0,105 s/op
                 ping:p0.95:   0,105 s/op
                 ping:p0.99:   0,105 s/op
                 ping:p0.999:  0,105 s/op
                 ping:p0.9999: 0,105 s/op
                 ping:p1.00:   0,105 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   3: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,105 s/op
                 pong:p0.00:   0,105 s/op
                 pong:p0.50:   0,105 s/op
                 pong:p0.90:   0,105 s/op
                 pong:p0.95:   0,105 s/op
                 pong:p0.99:   0,105 s/op
                 pong:p0.999:  0,105 s/op
                 pong:p0.9999: 0,105 s/op
                 pong:p1.00:   0,105 s/op

Iteration   4: 0,051 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,051 s/op
                 p0.90:        0,102 s/op
                 p0.95:        0,102 s/op
                 p0.99:        0,102 s/op
                 p0.999:       0,102 s/op
                 p0.9999:      0,102 s/op
                 p1.00:        0,102 s/op
                 ping:         0,102 s/op
                 ping:p0.00:   0,102 s/op
                 ping:p0.50:   0,102 s/op
                 ping:p0.90:   0,102 s/op
                 ping:p0.95:   0,102 s/op
                 ping:p0.99:   0,102 s/op
                 ping:p0.999:  0,102 s/op
                 ping:p0.9999: 0,102 s/op
                 ping:p1.00:   0,102 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   5: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,104 s/op
                 p0.95:        0,104 s/op
                 p0.99:        0,104 s/op
                 p0.999:       0,104 s/op
                 p0.9999:      0,104 s/op
                 p1.00:        0,104 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,104 s/op
                 pong:p0.00:   0,104 s/op
                 pong:p0.50:   0,104 s/op
                 pong:p0.90:   0,104 s/op
                 pong:p0.95:   0,104 s/op
                 pong:p0.99:   0,104 s/op
                 pong:p0.999:  0,104 s/op
                 pong:p0.9999: 0,104 s/op
                 pong:p1.00:   0,104 s/op


# Run progress: 80,00% complete, ETA 00:00:01
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,052 s/op
# Warmup Iteration   2: 0,050 s/op
# Warmup Iteration   3: 0,050 s/op
# Warmup Iteration   4: 0,052 s/op
# Warmup Iteration   5: 0,051 s/op
Iteration   1: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,105 s/op
                 pong:p0.00:   0,105 s/op
                 pong:p0.50:   0,105 s/op
                 pong:p0.90:   0,105 s/op
                 pong:p0.95:   0,105 s/op
                 pong:p0.99:   0,105 s/op
                 pong:p0.999:  0,105 s/op
                 pong:p0.9999: 0,105 s/op
                 pong:p1.00:   0,105 s/op

Iteration   2: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,104 s/op
                 p0.95:        0,104 s/op
                 p0.99:        0,104 s/op
                 p0.999:       0,104 s/op
                 p0.9999:      0,104 s/op
                 p1.00:        0,104 s/op
                 ping:         0,104 s/op
                 ping:p0.00:   0,104 s/op
                 ping:p0.50:   0,104 s/op
                 ping:p0.90:   0,104 s/op
                 ping:p0.95:   0,104 s/op
                 ping:p0.99:   0,104 s/op
                 ping:p0.999:  0,104 s/op
                 ping:p0.9999: 0,104 s/op
                 ping:p1.00:   0,104 s/op
                 pong:         ≈ 10⁻⁶ s/op
                 pong:p0.00:   ≈ 10⁻⁶ s/op
                 pong:p0.50:   ≈ 10⁻⁶ s/op
                 pong:p0.90:   ≈ 10⁻⁶ s/op
                 pong:p0.95:   ≈ 10⁻⁶ s/op
                 pong:p0.99:   ≈ 10⁻⁶ s/op
                 pong:p0.999:  ≈ 10⁻⁶ s/op
                 pong:p0.9999: ≈ 10⁻⁶ s/op
                 pong:p1.00:   ≈ 10⁻⁶ s/op

Iteration   3: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,105 s/op
                 pong:p0.00:   0,105 s/op
                 pong:p0.50:   0,105 s/op
                 pong:p0.90:   0,105 s/op
                 pong:p0.95:   0,105 s/op
                 pong:p0.99:   0,105 s/op
                 pong:p0.999:  0,105 s/op
                 pong:p0.9999: 0,105 s/op
                 pong:p1.00:   0,105 s/op

Iteration   4: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,105 s/op
                 p0.95:        0,105 s/op
                 p0.99:        0,105 s/op
                 p0.999:       0,105 s/op
                 p0.9999:      0,105 s/op
                 p1.00:        0,105 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,105 s/op
                 pong:p0.00:   0,105 s/op
                 pong:p0.50:   0,105 s/op
                 pong:p0.90:   0,105 s/op
                 pong:p0.95:   0,105 s/op
                 pong:p0.99:   0,105 s/op
                 pong:p0.999:  0,105 s/op
                 pong:p0.9999: 0,105 s/op
                 pong:p1.00:   0,105 s/op

Iteration   5: 0,052 s/op
                 p0.00:        ≈ 10⁻⁶ s/op
                 p0.50:        0,052 s/op
                 p0.90:        0,104 s/op
                 p0.95:        0,104 s/op
                 p0.99:        0,104 s/op
                 p0.999:       0,104 s/op
                 p0.9999:      0,104 s/op
                 p1.00:        0,104 s/op
                 ping:         ≈ 10⁻⁶ s/op
                 ping:p0.00:   ≈ 10⁻⁶ s/op
                 ping:p0.50:   ≈ 10⁻⁶ s/op
                 ping:p0.90:   ≈ 10⁻⁶ s/op
                 ping:p0.95:   ≈ 10⁻⁶ s/op
                 ping:p0.99:   ≈ 10⁻⁶ s/op
                 ping:p0.999:  ≈ 10⁻⁶ s/op
                 ping:p0.9999: ≈ 10⁻⁶ s/op
                 ping:p1.00:   ≈ 10⁻⁶ s/op
                 pong:         0,104 s/op
                 pong:p0.00:   0,104 s/op
                 pong:p0.50:   0,104 s/op
                 pong:p0.90:   0,104 s/op
                 pong:p0.95:   0,104 s/op
                 pong:p0.99:   0,104 s/op
                 pong:p0.999:  0,104 s/op
                 pong:p0.9999: 0,104 s/op
                 pong:p1.00:   0,104 s/op



Result "org.openjdk.jmh.it.control.ControlStopTest.pingpong":
  N = 50
  mean =      0,052 ±(99.9%) 0,026 s/op

  Histogram, s/op:
    [0,000, 0,013) = 25 
    [0,013, 0,025) = 0 
    [0,025, 0,038) = 0 
    [0,038, 0,050) = 0 
    [0,050, 0,063) = 0 
    [0,063, 0,075) = 0 
    [0,075, 0,088) = 0 
    [0,088, 0,100) = 0 
    [0,100, 0,113) = 25 
    [0,113, 0,125) = 0 
    [0,125, 0,138) = 0 
    [0,138, 0,150) = 0 
    [0,150, 0,163) = 0 
    [0,163, 0,175) = 0 
    [0,175, 0,188) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁶ s/op
     p(50,0000) =      0,050 s/op
     p(90,0000) =      0,105 s/op
     p(95,0000) =      0,105 s/op
     p(99,0000) =      0,105 s/op
     p(99,9000) =      0,105 s/op
     p(99,9900) =      0,105 s/op
     p(99,9990) =      0,105 s/op
     p(99,9999) =      0,105 s/op
    p(100,0000) =      0,105 s/op

Secondary result "org.openjdk.jmh.it.control.ControlStopTest.pingpong:ping":
  N = 25
  mean =      0,054 ±(99.9%) 0,040 s/op

  Histogram, s/op:
    [0,000, 0,013) = 12 
    [0,013, 0,025) = 0 
    [0,025, 0,038) = 0 
    [0,038, 0,050) = 0 
    [0,050, 0,063) = 0 
    [0,063, 0,075) = 0 
    [0,075, 0,088) = 0 
    [0,088, 0,100) = 0 
    [0,100, 0,113) = 13 
    [0,113, 0,125) = 0 
    [0,125, 0,138) = 0 
    [0,138, 0,150) = 0 
    [0,150, 0,163) = 0 
    [0,163, 0,175) = 0 
    [0,175, 0,188) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁶ s/op
     p(50,0000) =      0,100 s/op
     p(90,0000) =      0,105 s/op
     p(95,0000) =      0,105 s/op
     p(99,0000) =      0,105 s/op
     p(99,9000) =      0,105 s/op
     p(99,9900) =      0,105 s/op
     p(99,9990) =      0,105 s/op
     p(99,9999) =      0,105 s/op
    p(100,0000) =      0,105 s/op

Secondary result "org.openjdk.jmh.it.control.ControlStopTest.pingpong:pong":
  N = 25
  mean =      0,050 ±(99.9%) 0,040 s/op

  Histogram, s/op:
    [0,000, 0,013) = 13 
    [0,013, 0,025) = 0 
    [0,025, 0,038) = 0 
    [0,038, 0,050) = 0 
    [0,050, 0,063) = 0 
    [0,063, 0,075) = 0 
    [0,075, 0,088) = 0 
    [0,088, 0,100) = 0 
    [0,100, 0,113) = 12 
    [0,113, 0,125) = 0 
    [0,125, 0,138) = 0 
    [0,138, 0,150) = 0 
    [0,150, 0,163) = 0 
    [0,163, 0,175) = 0 
    [0,175, 0,188) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁶ s/op
     p(50,0000) =     ≈ 10⁻⁶ s/op
     p(90,0000) =      0,105 s/op
     p(95,0000) =      0,105 s/op
     p(99,0000) =      0,105 s/op
     p(99,9000) =      0,105 s/op
     p(99,9900) =      0,105 s/op
     p(99,9990) =      0,105 s/op
     p(99,9999) =      0,105 s/op
    p(100,0000) =      0,105 s/op


# Run complete. Total time: 00:00:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                Mode  Cnt   Score   Error  Units
ControlStopTest.pingpong               sample   50   0,052 ± 0,026   s/op
ControlStopTest.pingpong:p0.00         sample       ≈ 10⁻⁶           s/op
ControlStopTest.pingpong:p0.50         sample        0,050           s/op
ControlStopTest.pingpong:p0.90         sample        0,105           s/op
ControlStopTest.pingpong:p0.95         sample        0,105           s/op
ControlStopTest.pingpong:p0.99         sample        0,105           s/op
ControlStopTest.pingpong:p0.999        sample        0,105           s/op
ControlStopTest.pingpong:p0.9999       sample        0,105           s/op
ControlStopTest.pingpong:p1.00         sample        0,105           s/op
ControlStopTest.pingpong:ping          sample   25   0,054 ± 0,040   s/op
ControlStopTest.pingpong:ping:p0.00    sample       ≈ 10⁻⁶           s/op
ControlStopTest.pingpong:ping:p0.50    sample        0,100           s/op
ControlStopTest.pingpong:ping:p0.90    sample        0,105           s/op
ControlStopTest.pingpong:ping:p0.95    sample        0,105           s/op
ControlStopTest.pingpong:ping:p0.99    sample        0,105           s/op
ControlStopTest.pingpong:ping:p0.999   sample        0,105           s/op
ControlStopTest.pingpong:ping:p0.9999  sample        0,105           s/op
ControlStopTest.pingpong:ping:p1.00    sample        0,105           s/op
ControlStopTest.pingpong:pong          sample   25   0,050 ± 0,040   s/op
ControlStopTest.pingpong:pong:p0.00    sample       ≈ 10⁻⁶           s/op
ControlStopTest.pingpong:pong:p0.50    sample       ≈ 10⁻⁶           s/op
ControlStopTest.pingpong:pong:p0.90    sample        0,105           s/op
ControlStopTest.pingpong:pong:p0.95    sample        0,105           s/op
ControlStopTest.pingpong:pong:p0.99    sample        0,105           s/op
ControlStopTest.pingpong:pong:p0.999   sample        0,105           s/op
ControlStopTest.pingpong:pong:p0.9999  sample        0,105           s/op
ControlStopTest.pingpong:pong:p1.00    sample        0,105           s/op
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "ping", 1x "pong" in each group)
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.control.ControlStopTest.pingpong

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁷ s/op

Iteration   2: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁷ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   3: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   4: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁷ s/op

Iteration   5: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op


# Run progress: 20,00% complete, ETA 00:00:00
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁷ s/op

Iteration   2: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   3: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   4: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁷ s/op

Iteration   5: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op


# Run progress: 40,00% complete, ETA 00:00:00
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   2: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   3: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   4: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   5: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op


# Run progress: 60,00% complete, ETA 00:00:00
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁵ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁴ s/op

Iteration   2: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   3: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   4: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   5: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op


# Run progress: 80,00% complete, ETA 00:00:00
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   2: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   3: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   4: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op

Iteration   5: ≈ 10⁻⁶ s/op
                 ping: ≈ 10⁻⁶ s/op
                 pong: ≈ 10⁻⁶ s/op



Result "org.openjdk.jmh.it.control.ControlStopTest.pingpong":
  N = 25
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 24 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁶ s/op
     p(50,0000) =     ≈ 10⁻⁶ s/op
     p(90,0000) =     ≈ 10⁻⁶ s/op
     p(95,0000) =     ≈ 10⁻⁵ s/op
     p(99,0000) =     ≈ 10⁻⁵ s/op
     p(99,9000) =     ≈ 10⁻⁵ s/op
     p(99,9900) =     ≈ 10⁻⁵ s/op
     p(99,9990) =     ≈ 10⁻⁵ s/op
     p(99,9999) =     ≈ 10⁻⁵ s/op
    p(100,0000) =     ≈ 10⁻⁵ s/op

Secondary result "org.openjdk.jmh.it.control.ControlStopTest.pingpong:ping":
  N = 25
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 6 
    [ 0,000,  0,000) = 6 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 5 
    [ 0,000,  0,000) = 3 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 1 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁷ s/op
     p(50,0000) =     ≈ 10⁻⁶ s/op
     p(90,0000) =     ≈ 10⁻⁶ s/op
     p(95,0000) =     ≈ 10⁻⁶ s/op
     p(99,0000) =     ≈ 10⁻⁶ s/op
     p(99,9000) =     ≈ 10⁻⁶ s/op
     p(99,9900) =     ≈ 10⁻⁶ s/op
     p(99,9990) =     ≈ 10⁻⁶ s/op
     p(99,9999) =     ≈ 10⁻⁶ s/op
    p(100,0000) =     ≈ 10⁻⁶ s/op

Secondary result "org.openjdk.jmh.it.control.ControlStopTest.pingpong:pong":
  N = 25
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 24 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁷ s/op
     p(50,0000) =     ≈ 10⁻⁶ s/op
     p(90,0000) =     ≈ 10⁻⁶ s/op
     p(95,0000) =     ≈ 10⁻⁴ s/op
     p(99,0000) =     ≈ 10⁻⁴ s/op
     p(99,9000) =     ≈ 10⁻⁴ s/op
     p(99,9900) =     ≈ 10⁻⁴ s/op
     p(99,9990) =     ≈ 10⁻⁴ s/op
     p(99,9999) =     ≈ 10⁻⁴ s/op
    p(100,0000) =     ≈ 10⁻⁴ s/op


# Run complete. Total time: 00:00:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      Mode  Cnt   Score    Error  Units
ControlStopTest.pingpong         ss   25  ≈ 10⁻⁶            s/op
ControlStopTest.pingpong:ping    ss   25  ≈ 10⁻⁶            s/op
ControlStopTest.pingpong:pong    ss   25  ≈ 10⁻⁶            s/op
