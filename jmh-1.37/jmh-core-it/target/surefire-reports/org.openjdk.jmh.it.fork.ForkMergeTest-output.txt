# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default -Dbar
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.fork.ForkMergeTest.test

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 78,286 ops/s

# Run progress: 20,00% complete, ETA 00:00:01
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 78,737 ops/s

# Run progress: 40,00% complete, ETA 00:00:01
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 79,909 ops/s

# Run progress: 60,00% complete, ETA 00:00:00
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 78,467 ops/s

# Run progress: 80,00% complete, ETA 00:00:00
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
Iteration   1: 74,988 ops/s


Result "org.openjdk.jmh.it.fork.ForkMergeTest.test":
  78,077 ±(99.9%) 7,082 ops/s [Average]
  (min, avg, max) = (74,988, 78,077, 79,909), stdev = 1,839
  CI (99.9%): [70,996, 85,159] (assumes normal distribution)


# Run complete. Total time: 00:00:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark            Mode  Cnt   Score   Error  Units
ForkMergeTest.test  thrpt    5  78,077 ± 7,082  ops/s
