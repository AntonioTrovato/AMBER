# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "test1", 1x "test2" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T

# Run progress: 0,00% complete, ETA 00:00:03
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 2314237319,578 ops/s
# Warmup Iteration   2: 1801591776,749 ops/s
# Warmup Iteration   3: 2359210220,079 ops/s
# Warmup Iteration   4: 2399224358,528 ops/s
# Warmup Iteration   5: 1911568245,723 ops/s
Iteration   1: 2792399586,653 ops/s
                 test1: 1423402290,864 ops/s
                 test2: 1368997295,789 ops/s

Iteration   2: 2680113332,281 ops/s
                 test1: 1332173683,892 ops/s
                 test2: 1347939648,388 ops/s

Iteration   3: 2383221407,080 ops/s
                 test1: 1240367948,684 ops/s
                 test2: 1142853458,396 ops/s

Iteration   4: 2314398087,721 ops/s
                 test1: 1054973296,373 ops/s
                 test2: 1259424791,348 ops/s

Iteration   5: 1812687353,573 ops/s
                 test1: 956075512,389 ops/s
                 test2: 856611841,184 ops/s



Result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T":
  2396563953,461 ±(99.9%) 1472496554,204 ops/s [Average]
  (min, avg, max) = (1812687353,573, 2396563953,461, 2792399586,653), stdev = 382402679,014
  CI (99.9%): [924067399,257, 3869060507,666] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T:test1":
  1201398546,440 ±(99.9%) 744505245,374 ops/s [Average]
  (min, avg, max) = (956075512,389, 1201398546,440, 1423402290,864), stdev = 193345647,946
  CI (99.9%): [456893301,066, 1945903791,814] (assumes normal distribution)

Secondary result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T:test2":
  1195165407,021 ±(99.9%) 805516192,742 ops/s [Average]
  (min, avg, max) = (856611841,184, 1195165407,021, 1368997295,789), stdev = 209189997,229
  CI (99.9%): [389649214,279, 2000681599,763] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "test1", 1x "test2" in each group), will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T

# Run progress: 33,22% complete, ETA 00:00:03
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
                 test1: ≈ 10⁻⁹ s/op
                 test2: ≈ 10⁻⁹ s/op

Iteration   2: ≈ 10⁻⁹ s/op
                 test1: ≈ 10⁻⁹ s/op
                 test2: ≈ 10⁻⁹ s/op

Iteration   3: ≈ 10⁻⁹ s/op
                 test1: ≈ 10⁻⁹ s/op
                 test2: ≈ 10⁻⁹ s/op

Iteration   4: ≈ 10⁻⁹ s/op
                 test1: ≈ 10⁻⁹ s/op
                 test2: ≈ 10⁻⁹ s/op

Iteration   5: ≈ 10⁻⁹ s/op
                 test1: ≈ 10⁻⁹ s/op
                 test2: ≈ 10⁻⁹ s/op



Result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T":
  ≈ 10⁻⁹ s/op

Secondary result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T:test1":
  ≈ 10⁻⁹ s/op

Secondary result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T:test2":
  ≈ 10⁻⁹ s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "test1", 1x "test2" in each group), will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T

# Run progress: 66,45% complete, ETA 00:00:01
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁷ s/op
Iteration   1: ≈ 10⁻⁶ s/op
                 p0.00:         ≈ 0 s/op
                 p0.50:         ≈ 10⁻⁷ s/op
                 p0.90:         ≈ 10⁻⁷ s/op
                 p0.95:         ≈ 10⁻⁷ s/op
                 p0.99:         ≈ 10⁻⁷ s/op
                 p0.999:        ≈ 10⁻⁴ s/op
                 p0.9999:       ≈ 10⁻³ s/op
                 p1.00:         ≈ 10⁻³ s/op
                 test1:         ≈ 10⁻⁷ s/op
                 test1:p0.00:   ≈ 0 s/op
                 test1:p0.50:   ≈ 10⁻⁷ s/op
                 test1:p0.90:   ≈ 10⁻⁷ s/op
                 test1:p0.95:   ≈ 10⁻⁷ s/op
                 test1:p0.99:   ≈ 10⁻⁷ s/op
                 test1:p0.999:  ≈ 10⁻⁵ s/op
                 test1:p0.9999: ≈ 10⁻⁴ s/op
                 test1:p1.00:   ≈ 10⁻⁴ s/op
                 test2:         ≈ 10⁻⁶ s/op
                 test2:p0.00:   ≈ 0 s/op
                 test2:p0.50:   ≈ 10⁻⁷ s/op
                 test2:p0.90:   ≈ 10⁻⁷ s/op
                 test2:p0.95:   ≈ 10⁻⁷ s/op
                 test2:p0.99:   ≈ 10⁻⁷ s/op
                 test2:p0.999:  ≈ 10⁻⁴ s/op
                 test2:p0.9999: ≈ 10⁻³ s/op
                 test2:p1.00:   ≈ 10⁻³ s/op

Iteration   2: ≈ 10⁻⁷ s/op
                 p0.00:         ≈ 0 s/op
                 p0.50:         ≈ 10⁻⁷ s/op
                 p0.90:         ≈ 10⁻⁷ s/op
                 p0.95:         ≈ 10⁻⁷ s/op
                 p0.99:         ≈ 10⁻⁷ s/op
                 p0.999:        ≈ 10⁻⁴ s/op
                 p0.9999:       0,001 s/op
                 p1.00:         0,001 s/op
                 test1:         ≈ 10⁻⁷ s/op
                 test1:p0.00:   ≈ 0 s/op
                 test1:p0.50:   ≈ 10⁻⁷ s/op
                 test1:p0.90:   ≈ 10⁻⁷ s/op
                 test1:p0.95:   ≈ 10⁻⁷ s/op
                 test1:p0.99:   ≈ 10⁻⁷ s/op
                 test1:p0.999:  ≈ 10⁻⁴ s/op
                 test1:p0.9999: ≈ 10⁻⁴ s/op
                 test1:p1.00:   ≈ 10⁻⁴ s/op
                 test2:         ≈ 10⁻⁶ s/op
                 test2:p0.00:   ≈ 0 s/op
                 test2:p0.50:   ≈ 10⁻⁷ s/op
                 test2:p0.90:   ≈ 10⁻⁷ s/op
                 test2:p0.95:   ≈ 10⁻⁷ s/op
                 test2:p0.99:   ≈ 10⁻⁷ s/op
                 test2:p0.999:  ≈ 10⁻⁴ s/op
                 test2:p0.9999: 0,001 s/op
                 test2:p1.00:   0,001 s/op

Iteration   3: ≈ 10⁻⁶ s/op
                 p0.00:         ≈ 0 s/op
                 p0.50:         ≈ 10⁻⁷ s/op
                 p0.90:         ≈ 10⁻⁷ s/op
                 p0.95:         ≈ 10⁻⁷ s/op
                 p0.99:         ≈ 10⁻⁷ s/op
                 p0.999:        ≈ 10⁻⁷ s/op
                 p0.9999:       0,006 s/op
                 p1.00:         0,006 s/op
                 test1:         ≈ 10⁻⁷ s/op
                 test1:p0.00:   ≈ 0 s/op
                 test1:p0.50:   ≈ 10⁻⁷ s/op
                 test1:p0.90:   ≈ 10⁻⁷ s/op
                 test1:p0.95:   ≈ 10⁻⁷ s/op
                 test1:p0.99:   ≈ 10⁻⁷ s/op
                 test1:p0.999:  ≈ 10⁻⁷ s/op
                 test1:p0.9999: ≈ 10⁻⁵ s/op
                 test1:p1.00:   ≈ 10⁻⁵ s/op
                 test2:         ≈ 10⁻⁶ s/op
                 test2:p0.00:   ≈ 0 s/op
                 test2:p0.50:   ≈ 10⁻⁷ s/op
                 test2:p0.90:   ≈ 10⁻⁷ s/op
                 test2:p0.95:   ≈ 10⁻⁷ s/op
                 test2:p0.99:   ≈ 10⁻⁷ s/op
                 test2:p0.999:  ≈ 10⁻⁷ s/op
                 test2:p0.9999: 0,006 s/op
                 test2:p1.00:   0,006 s/op

Iteration   4: ≈ 10⁻⁷ s/op
                 p0.00:         ≈ 0 s/op
                 p0.50:         ≈ 10⁻⁷ s/op
                 p0.90:         ≈ 10⁻⁷ s/op
                 p0.95:         ≈ 10⁻⁷ s/op
                 p0.99:         ≈ 10⁻⁷ s/op
                 p0.999:        ≈ 10⁻⁵ s/op
                 p0.9999:       0,001 s/op
                 p1.00:         0,001 s/op
                 test1:         ≈ 10⁻⁷ s/op
                 test1:p0.00:   ≈ 0 s/op
                 test1:p0.50:   ≈ 10⁻⁷ s/op
                 test1:p0.90:   ≈ 10⁻⁷ s/op
                 test1:p0.95:   ≈ 10⁻⁷ s/op
                 test1:p0.99:   ≈ 10⁻⁷ s/op
                 test1:p0.999:  ≈ 10⁻⁵ s/op
                 test1:p0.9999: ≈ 10⁻⁵ s/op
                 test1:p1.00:   ≈ 10⁻⁵ s/op
                 test2:         ≈ 10⁻⁶ s/op
                 test2:p0.00:   ≈ 0 s/op
                 test2:p0.50:   ≈ 10⁻⁷ s/op
                 test2:p0.90:   ≈ 10⁻⁷ s/op
                 test2:p0.95:   ≈ 10⁻⁷ s/op
                 test2:p0.99:   ≈ 10⁻⁷ s/op
                 test2:p0.999:  ≈ 10⁻⁴ s/op
                 test2:p0.9999: 0,001 s/op
                 test2:p1.00:   0,001 s/op

Iteration   5: ≈ 10⁻⁷ s/op
                 p0.00:         ≈ 0 s/op
                 p0.50:         ≈ 10⁻⁷ s/op
                 p0.90:         ≈ 10⁻⁷ s/op
                 p0.95:         ≈ 10⁻⁷ s/op
                 p0.99:         ≈ 10⁻⁷ s/op
                 p0.999:        ≈ 10⁻⁵ s/op
                 p0.9999:       ≈ 10⁻⁴ s/op
                 p1.00:         ≈ 10⁻⁴ s/op
                 test1:         ≈ 10⁻⁷ s/op
                 test1:p0.00:   ≈ 0 s/op
                 test1:p0.50:   ≈ 10⁻⁷ s/op
                 test1:p0.90:   ≈ 10⁻⁷ s/op
                 test1:p0.95:   ≈ 10⁻⁷ s/op
                 test1:p0.99:   ≈ 10⁻⁷ s/op
                 test1:p0.999:  ≈ 10⁻⁵ s/op
                 test1:p0.9999: ≈ 10⁻⁴ s/op
                 test1:p1.00:   ≈ 10⁻⁴ s/op
                 test2:         ≈ 10⁻⁷ s/op
                 test2:p0.00:   ≈ 0 s/op
                 test2:p0.50:   ≈ 10⁻⁷ s/op
                 test2:p0.90:   ≈ 10⁻⁷ s/op
                 test2:p0.95:   ≈ 10⁻⁷ s/op
                 test2:p0.99:   ≈ 10⁻⁷ s/op
                 test2:p0.999:  ≈ 10⁻⁶ s/op
                 test2:p0.9999: ≈ 10⁻⁶ s/op
                 test2:p1.00:   ≈ 10⁻⁶ s/op



Result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T":
  N = 28294
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,000, 0,001) = 28291 
    [0,001, 0,001) = 1 
    [0,001, 0,002) = 1 
    [0,002, 0,002) = 0 
    [0,002, 0,003) = 0 
    [0,003, 0,003) = 0 
    [0,003, 0,004) = 0 
    [0,004, 0,004) = 0 
    [0,004, 0,005) = 0 
    [0,005, 0,005) = 0 
    [0,005, 0,006) = 0 
    [0,006, 0,006) = 0 
    [0,006, 0,007) = 1 

  Percentiles, s/op:
      p(0,0000) =        ≈ 0 s/op
     p(50,0000) =     ≈ 10⁻⁷ s/op
     p(90,0000) =     ≈ 10⁻⁷ s/op
     p(95,0000) =     ≈ 10⁻⁷ s/op
     p(99,0000) =     ≈ 10⁻⁷ s/op
     p(99,9000) =     ≈ 10⁻⁵ s/op
     p(99,9900) =      0,001 s/op
     p(99,9990) =      0,006 s/op
     p(99,9999) =      0,006 s/op
    p(100,0000) =      0,006 s/op

Secondary result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T:test1":
  N = 13863
  mean =     ≈ 10⁻⁷ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 13851 
    [ 0,000,  0,000) = 3 
    [ 0,000,  0,000) = 4 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 

  Percentiles, s/op:
      p(0,0000) =        ≈ 0 s/op
     p(50,0000) =     ≈ 10⁻⁷ s/op
     p(90,0000) =     ≈ 10⁻⁷ s/op
     p(95,0000) =     ≈ 10⁻⁷ s/op
     p(99,0000) =     ≈ 10⁻⁷ s/op
     p(99,9000) =     ≈ 10⁻⁵ s/op
     p(99,9900) =     ≈ 10⁻⁴ s/op
     p(99,9990) =     ≈ 10⁻⁴ s/op
     p(99,9999) =     ≈ 10⁻⁴ s/op
    p(100,0000) =     ≈ 10⁻⁴ s/op

Secondary result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T:test2":
  N = 14431
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,000, 0,001) = 14428 
    [0,001, 0,001) = 1 
    [0,001, 0,002) = 1 
    [0,002, 0,002) = 0 
    [0,002, 0,003) = 0 
    [0,003, 0,003) = 0 
    [0,003, 0,004) = 0 
    [0,004, 0,004) = 0 
    [0,004, 0,005) = 0 
    [0,005, 0,005) = 0 
    [0,005, 0,006) = 0 
    [0,006, 0,006) = 0 
    [0,006, 0,007) = 1 

  Percentiles, s/op:
      p(0,0000) =        ≈ 0 s/op
     p(50,0000) =     ≈ 10⁻⁷ s/op
     p(90,0000) =     ≈ 10⁻⁷ s/op
     p(95,0000) =     ≈ 10⁻⁷ s/op
     p(99,0000) =     ≈ 10⁻⁷ s/op
     p(99,9000) =     ≈ 10⁻⁵ s/op
     p(99,9900) =      0,004 s/op
     p(99,9990) =      0,006 s/op
     p(99,9999) =      0,006 s/op
    p(100,0000) =      0,006 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 2 threads (1 group; 1x "test1", 1x "test2" in each group)
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T

# Run progress: 99,67% complete, ETA 00:00:00
# Fork: 1 of 1
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
# Warmup Iteration   2: 0,002 s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
                 test1: ≈ 10⁻⁶ s/op
                 test2: ≈ 10⁻⁶ s/op

Iteration   2: ≈ 10⁻⁵ s/op
                 test1: ≈ 10⁻⁶ s/op
                 test2: ≈ 10⁻⁵ s/op

Iteration   3: ≈ 10⁻⁶ s/op
                 test1: ≈ 10⁻⁵ s/op
                 test2: ≈ 10⁻⁶ s/op

Iteration   4: ≈ 10⁻⁶ s/op
                 test1: ≈ 10⁻⁶ s/op
                 test2: ≈ 10⁻⁵ s/op

Iteration   5: ≈ 10⁻⁶ s/op
                 test1: ≈ 10⁻⁶ s/op
                 test2: ≈ 10⁻⁶ s/op



Result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T":
  N = 5
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁶ s/op
     p(50,0000) =     ≈ 10⁻⁶ s/op
     p(90,0000) =     ≈ 10⁻⁵ s/op
     p(95,0000) =     ≈ 10⁻⁵ s/op
     p(99,0000) =     ≈ 10⁻⁵ s/op
     p(99,9000) =     ≈ 10⁻⁵ s/op
     p(99,9900) =     ≈ 10⁻⁵ s/op
     p(99,9990) =     ≈ 10⁻⁵ s/op
     p(99,9999) =     ≈ 10⁻⁵ s/op
    p(100,0000) =     ≈ 10⁻⁵ s/op

Secondary result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T:test1":
  N = 5
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁶ s/op
     p(50,0000) =     ≈ 10⁻⁶ s/op
     p(90,0000) =     ≈ 10⁻⁵ s/op
     p(95,0000) =     ≈ 10⁻⁵ s/op
     p(99,0000) =     ≈ 10⁻⁵ s/op
     p(99,9000) =     ≈ 10⁻⁵ s/op
     p(99,9900) =     ≈ 10⁻⁵ s/op
     p(99,9990) =     ≈ 10⁻⁵ s/op
     p(99,9999) =     ≈ 10⁻⁵ s/op
    p(100,0000) =     ≈ 10⁻⁵ s/op

Secondary result "org.openjdk.jmh.it.threadparams.GroupThreadParamsStabilityTest.T:test2":
  N = 5
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 2 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁶ s/op
     p(50,0000) =     ≈ 10⁻⁶ s/op
     p(90,0000) =     ≈ 10⁻⁵ s/op
     p(95,0000) =     ≈ 10⁻⁵ s/op
     p(99,0000) =     ≈ 10⁻⁵ s/op
     p(99,9000) =     ≈ 10⁻⁵ s/op
     p(99,9900) =     ≈ 10⁻⁵ s/op
     p(99,9990) =     ≈ 10⁻⁵ s/op
     p(99,9999) =     ≈ 10⁻⁵ s/op
    p(100,0000) =     ≈ 10⁻⁵ s/op


# Run complete. Total time: 00:00:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                         Mode    Cnt           Score            Error  Units
GroupThreadParamsStabilityTest.T                 thrpt      5  2396563953,461 ± 1472496554,204  ops/s
GroupThreadParamsStabilityTest.T:test1           thrpt      5  1201398546,440 ±  744505245,374  ops/s
GroupThreadParamsStabilityTest.T:test2           thrpt      5  1195165407,021 ±  805516192,742  ops/s
GroupThreadParamsStabilityTest.T                  avgt      5          ≈ 10⁻⁹                    s/op
GroupThreadParamsStabilityTest.T:test1            avgt      5          ≈ 10⁻⁹                    s/op
GroupThreadParamsStabilityTest.T:test2            avgt      5          ≈ 10⁻⁹                    s/op
GroupThreadParamsStabilityTest.T                sample  28294          ≈ 10⁻⁶                    s/op
GroupThreadParamsStabilityTest.T:p0.00          sample                    ≈ 0                    s/op
GroupThreadParamsStabilityTest.T:p0.50          sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:p0.90          sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:p0.95          sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:p0.99          sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:p0.999         sample                 ≈ 10⁻⁵                    s/op
GroupThreadParamsStabilityTest.T:p0.9999        sample                  0,001                    s/op
GroupThreadParamsStabilityTest.T:p1.00          sample                  0,006                    s/op
GroupThreadParamsStabilityTest.T:test1          sample  13863          ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test1:p0.00    sample                    ≈ 0                    s/op
GroupThreadParamsStabilityTest.T:test1:p0.50    sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test1:p0.90    sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test1:p0.95    sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test1:p0.99    sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test1:p0.999   sample                 ≈ 10⁻⁵                    s/op
GroupThreadParamsStabilityTest.T:test1:p0.9999  sample                 ≈ 10⁻⁴                    s/op
GroupThreadParamsStabilityTest.T:test1:p1.00    sample                 ≈ 10⁻⁴                    s/op
GroupThreadParamsStabilityTest.T:test2          sample  14431          ≈ 10⁻⁶                    s/op
GroupThreadParamsStabilityTest.T:test2:p0.00    sample                    ≈ 0                    s/op
GroupThreadParamsStabilityTest.T:test2:p0.50    sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test2:p0.90    sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test2:p0.95    sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test2:p0.99    sample                 ≈ 10⁻⁷                    s/op
GroupThreadParamsStabilityTest.T:test2:p0.999   sample                 ≈ 10⁻⁵                    s/op
GroupThreadParamsStabilityTest.T:test2:p0.9999  sample                  0,004                    s/op
GroupThreadParamsStabilityTest.T:test2:p1.00    sample                  0,006                    s/op
GroupThreadParamsStabilityTest.T                    ss      5          ≈ 10⁻⁶                    s/op
GroupThreadParamsStabilityTest.T:test1              ss      5          ≈ 10⁻⁶                    s/op
GroupThreadParamsStabilityTest.T:test2              ss      5          ≈ 10⁻⁶                    s/op
