# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.control.ControlStartStopTest.ping

# Run progress: 0,00% complete, ETA 00:00:05
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 489734443,855 ops/s
# Warmup Iteration   2: 512676073,126 ops/s
# Warmup Iteration   3: 519401086,389 ops/s
# Warmup Iteration   4: 517845433,837 ops/s
# Warmup Iteration   5: 516633199,265 ops/s
Iteration   1: 515152144,589 ops/s
Iteration   2: 515267921,656 ops/s
Iteration   3: 514770056,142 ops/s
Iteration   4: 515795417,227 ops/s
Iteration   5: 515755618,593 ops/s

# Run progress: 20,00% complete, ETA 00:00:04
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 484835883,855 ops/s
# Warmup Iteration   2: 510187390,445 ops/s
# Warmup Iteration   3: 518657079,139 ops/s
# Warmup Iteration   4: 519158330,303 ops/s
# Warmup Iteration   5: 518529794,742 ops/s
Iteration   1: 512897360,389 ops/s
Iteration   2: 525998874,917 ops/s
Iteration   3: 521554172,852 ops/s
Iteration   4: 520373521,205 ops/s
Iteration   5: 518540259,454 ops/s

# Run progress: 40,00% complete, ETA 00:00:03
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 492408825,172 ops/s
# Warmup Iteration   2: 513022915,085 ops/s
# Warmup Iteration   3: 515147162,896 ops/s
# Warmup Iteration   4: 518303086,891 ops/s
# Warmup Iteration   5: 518552061,088 ops/s
Iteration   1: 517875791,323 ops/s
Iteration   2: 528910628,846 ops/s
Iteration   3: 518408468,597 ops/s
Iteration   4: 518308013,126 ops/s
Iteration   5: 519171916,998 ops/s

# Run progress: 60,00% complete, ETA 00:00:02
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 495967346,573 ops/s
# Warmup Iteration   2: 513979172,628 ops/s
# Warmup Iteration   3: 519083422,853 ops/s
# Warmup Iteration   4: 517041577,909 ops/s
# Warmup Iteration   5: 517904250,401 ops/s
Iteration   1: 521540832,704 ops/s
Iteration   2: 527110670,527 ops/s
Iteration   3: 518979583,933 ops/s
Iteration   4: 518729027,719 ops/s
Iteration   5: 516049006,191 ops/s

# Run progress: 80,00% complete, ETA 00:00:01
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 493106722,284 ops/s
# Warmup Iteration   2: 513663796,613 ops/s
# Warmup Iteration   3: 519003027,505 ops/s
# Warmup Iteration   4: 519136790,147 ops/s
# Warmup Iteration   5: 518707125,825 ops/s
Iteration   1: 521077537,856 ops/s
Iteration   2: 527404508,787 ops/s
Iteration   3: 520529893,375 ops/s
Iteration   4: 517666136,295 ops/s
Iteration   5: 518775993,799 ops/s


Result "org.openjdk.jmh.it.control.ControlStartStopTest.ping":
  519465734,284 ±(99.9%) 3123661,206 ops/s [Average]
  (min, avg, max) = (512897360,389, 519465734,284, 528910628,846), stdev = 4169998,341
  CI (99.9%): [516342073,078, 522589395,490] (assumes normal distribution)


# Run complete. Total time: 00:00:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                   Mode  Cnt          Score         Error  Units
ControlStartStopTest.ping  thrpt   25  519465734,284 ± 3123661,206  ops/s
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.control.ControlStartStopTest.ping

# Run progress: 0,00% complete, ETA 00:00:05
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
Iteration   2: ≈ 10⁻⁹ s/op
Iteration   3: ≈ 10⁻⁹ s/op
Iteration   4: ≈ 10⁻⁹ s/op
Iteration   5: ≈ 10⁻⁹ s/op

# Run progress: 20,00% complete, ETA 00:00:04
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
Iteration   2: ≈ 10⁻⁹ s/op
Iteration   3: ≈ 10⁻⁹ s/op
Iteration   4: ≈ 10⁻⁹ s/op
Iteration   5: ≈ 10⁻⁹ s/op

# Run progress: 40,00% complete, ETA 00:00:03
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
Iteration   2: ≈ 10⁻⁹ s/op
Iteration   3: ≈ 10⁻⁹ s/op
Iteration   4: ≈ 10⁻⁹ s/op
Iteration   5: ≈ 10⁻⁹ s/op

# Run progress: 60,00% complete, ETA 00:00:02
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
Iteration   2: ≈ 10⁻⁹ s/op
Iteration   3: ≈ 10⁻⁹ s/op
Iteration   4: ≈ 10⁻⁹ s/op
Iteration   5: ≈ 10⁻⁹ s/op

# Run progress: 80,00% complete, ETA 00:00:01
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
Iteration   2: ≈ 10⁻⁹ s/op
Iteration   3: ≈ 10⁻⁹ s/op
Iteration   4: ≈ 10⁻⁹ s/op
Iteration   5: ≈ 10⁻⁹ s/op


Result "org.openjdk.jmh.it.control.ControlStartStopTest.ping":
  ≈ 10⁻⁹ s/op


# Run complete. Total time: 00:00:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                  Mode  Cnt   Score     Error  Units
ControlStartStopTest.ping  avgt   25  ≈ 10⁻⁹             s/op
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.control.ControlStartStopTest.ping

# Run progress: 0,00% complete, ETA 00:00:05
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
# Warmup Iteration   2: ≈ 10⁻⁸ s/op
# Warmup Iteration   3: ≈ 10⁻⁸ s/op
# Warmup Iteration   4: ≈ 10⁻⁸ s/op
# Warmup Iteration   5: ≈ 10⁻⁸ s/op
Iteration   1: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   2: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   3: ≈ 10⁻⁷ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁵ s/op
                 p0.9999: ≈ 10⁻⁴ s/op
                 p1.00:   ≈ 10⁻⁴ s/op

Iteration   4: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁶ s/op
                 p1.00:   ≈ 10⁻⁶ s/op

Iteration   5: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 10⁻⁷ s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op


# Run progress: 20,00% complete, ETA 00:00:04
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
# Warmup Iteration   2: ≈ 10⁻⁸ s/op
# Warmup Iteration   3: ≈ 10⁻⁸ s/op
# Warmup Iteration   4: ≈ 10⁻⁸ s/op
# Warmup Iteration   5: ≈ 10⁻⁸ s/op
Iteration   1: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁶ s/op
                 p1.00:   ≈ 10⁻⁶ s/op

Iteration   2: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   3: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   4: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁶ s/op
                 p0.9999: ≈ 10⁻⁵ s/op
                 p1.00:   ≈ 10⁻⁵ s/op

Iteration   5: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁵ s/op
                 p0.9999: ≈ 10⁻⁵ s/op
                 p1.00:   ≈ 10⁻⁵ s/op


# Run progress: 40,00% complete, ETA 00:00:03
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
# Warmup Iteration   2: ≈ 10⁻⁸ s/op
# Warmup Iteration   3: ≈ 10⁻⁸ s/op
# Warmup Iteration   4: ≈ 10⁻⁸ s/op
# Warmup Iteration   5: ≈ 10⁻⁸ s/op
Iteration   1: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   2: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   3: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   4: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   5: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op


# Run progress: 60,00% complete, ETA 00:00:02
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
# Warmup Iteration   2: ≈ 10⁻⁸ s/op
# Warmup Iteration   3: ≈ 10⁻⁸ s/op
# Warmup Iteration   4: ≈ 10⁻⁸ s/op
# Warmup Iteration   5: ≈ 10⁻⁸ s/op
Iteration   1: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁶ s/op
                 p1.00:   ≈ 10⁻⁶ s/op

Iteration   2: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   3: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   4: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   5: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op


# Run progress: 80,00% complete, ETA 00:00:01
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
# Warmup Iteration   2: ≈ 10⁻⁷ s/op
# Warmup Iteration   3: ≈ 10⁻⁸ s/op
# Warmup Iteration   4: ≈ 10⁻⁸ s/op
# Warmup Iteration   5: ≈ 10⁻⁸ s/op
Iteration   1: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁶ s/op
                 p0.9999: ≈ 10⁻⁵ s/op
                 p1.00:   ≈ 10⁻⁵ s/op

Iteration   2: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁶ s/op
                 p0.9999: ≈ 10⁻⁵ s/op
                 p1.00:   ≈ 10⁻⁵ s/op

Iteration   3: ≈ 10⁻⁷ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁵ s/op
                 p0.9999: ≈ 10⁻⁵ s/op
                 p1.00:   ≈ 10⁻⁵ s/op

Iteration   4: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op

Iteration   5: ≈ 10⁻⁸ s/op
                 p0.00:   ≈ 0 s/op
                 p0.50:   ≈ 0 s/op
                 p0.90:   ≈ 10⁻⁷ s/op
                 p0.95:   ≈ 10⁻⁷ s/op
                 p0.99:   ≈ 10⁻⁷ s/op
                 p0.999:  ≈ 10⁻⁷ s/op
                 p0.9999: ≈ 10⁻⁷ s/op
                 p1.00:   ≈ 10⁻⁷ s/op



Result "org.openjdk.jmh.it.control.ControlStartStopTest.ping":
  N = 64691
  mean =     ≈ 10⁻⁸ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 64680 
    [ 0,000,  0,000) = 4 
    [ 0,000,  0,000) = 3 
    [ 0,000,  0,000) = 2 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 1 

  Percentiles, s/op:
      p(0,0000) =        ≈ 0 s/op
     p(50,0000) =        ≈ 0 s/op
     p(90,0000) =     ≈ 10⁻⁷ s/op
     p(95,0000) =     ≈ 10⁻⁷ s/op
     p(99,0000) =     ≈ 10⁻⁷ s/op
     p(99,9000) =     ≈ 10⁻⁷ s/op
     p(99,9900) =     ≈ 10⁻⁵ s/op
     p(99,9990) =     ≈ 10⁻⁴ s/op
     p(99,9999) =     ≈ 10⁻⁴ s/op
    p(100,0000) =     ≈ 10⁻⁴ s/op


# Run complete. Total time: 00:00:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode    Cnt   Score    Error  Units
ControlStartStopTest.ping          sample  64691  ≈ 10⁻⁸            s/op
ControlStartStopTest.ping:p0.00    sample            ≈ 0            s/op
ControlStartStopTest.ping:p0.50    sample            ≈ 0            s/op
ControlStartStopTest.ping:p0.90    sample         ≈ 10⁻⁷            s/op
ControlStartStopTest.ping:p0.95    sample         ≈ 10⁻⁷            s/op
ControlStartStopTest.ping:p0.99    sample         ≈ 10⁻⁷            s/op
ControlStartStopTest.ping:p0.999   sample         ≈ 10⁻⁷            s/op
ControlStartStopTest.ping:p0.9999  sample         ≈ 10⁻⁵            s/op
ControlStartStopTest.ping:p1.00    sample         ≈ 10⁻⁴            s/op
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 100 ms each
# Measurement: 5 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.control.ControlStartStopTest.ping

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,004 s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op
Iteration   4: ≈ 10⁻⁶ s/op
Iteration   5: ≈ 10⁻⁶ s/op

# Run progress: 20,00% complete, ETA 00:00:00
# Fork: 2 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,006 s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op
Iteration   4: ≈ 10⁻⁶ s/op
Iteration   5: ≈ 10⁻⁶ s/op

# Run progress: 40,00% complete, ETA 00:00:00
# Fork: 3 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,003 s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op
Iteration   4: ≈ 10⁻⁶ s/op
Iteration   5: ≈ 10⁻⁶ s/op

# Run progress: 60,00% complete, ETA 00:00:00
# Fork: 4 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,003 s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op
Iteration   4: ≈ 10⁻⁶ s/op
Iteration   5: ≈ 10⁻⁶ s/op

# Run progress: 80,00% complete, ETA 00:00:00
# Fork: 5 of 5
The dynamic halt can be used only when the durations of warm-up and measurement iterations are at least 100ms, and when the total amount of iterations within a fork is at least 100.
# Warmup Iteration   1: 0,004 s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op
Iteration   4: ≈ 10⁻⁶ s/op
Iteration   5: ≈ 10⁻⁶ s/op


Result "org.openjdk.jmh.it.control.ControlStartStopTest.ping":
  N = 25
  mean =     ≈ 10⁻⁶ ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 9 
    [ 0,000,  0,000) = 14 
    [ 0,000,  0,000) = 1 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 
    [ 0,000,  0,000) = 0 

  Percentiles, s/op:
      p(0,0000) =     ≈ 10⁻⁶ s/op
     p(50,0000) =     ≈ 10⁻⁶ s/op
     p(90,0000) =     ≈ 10⁻⁶ s/op
     p(95,0000) =     ≈ 10⁻⁶ s/op
     p(99,0000) =     ≈ 10⁻⁶ s/op
     p(99,9000) =     ≈ 10⁻⁶ s/op
     p(99,9900) =     ≈ 10⁻⁶ s/op
     p(99,9990) =     ≈ 10⁻⁶ s/op
     p(99,9999) =     ≈ 10⁻⁶ s/op
    p(100,0000) =     ≈ 10⁻⁶ s/op


# Run complete. Total time: 00:00:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                  Mode  Cnt   Score    Error  Units
ControlStartStopTest.ping    ss   25  ≈ 10⁻⁶            s/op
