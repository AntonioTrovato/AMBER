# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 39258289,703 ops/s
# Processing profiler results: CountingExternalProfiler 


Result "org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench":
  39258289,703 ops/s


# Run complete. Total time: 00:00:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt         Score   Error  Units
CountingExternalProfilerTest.bench  thrpt       39258289,703          ops/s
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench

# Run progress: 0,00% complete, ETA 00:00:00
# Fork: 1 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 240602225,647 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 20,00% complete, ETA 00:00:01
# Fork: 2 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 213194590,488 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 40,00% complete, ETA 00:00:01
# Fork: 3 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 140438401,922 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 60,00% complete, ETA 00:00:00
# Fork: 4 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 368743118,979 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 80,00% complete, ETA 00:00:00
# Fork: 5 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 849455439,873 ops/s
# Processing profiler results: CountingExternalProfiler 


Result "org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench":
  362486755,382 ±(99.9%) 1095281639,513 ops/s [Average]
  (min, avg, max) = (140438401,922, 362486755,382, 849455439,873), stdev = 284441163,566
  CI (99.9%): [≈ 0, 1457768394,895] (assumes normal distribution)


# Run complete. Total time: 00:00:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt          Score            Error  Units
CountingExternalProfilerTest.bench  thrpt    5  362486755,382 ± 1095281639,513  ops/s
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench

# Run progress: 0,00% complete, ETA 00:00:00
# Warmup Fork: 1 of 1
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 38349768,363 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 50,00% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 42146194,044 ops/s
# Processing profiler results: CountingExternalProfiler 


Result "org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench":
  42146194,044 ops/s


# Run complete. Total time: 00:00:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt         Score   Error  Units
CountingExternalProfilerTest.bench  thrpt       42146194,044          ops/s
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench

# Run progress: 0,00% complete, ETA 00:00:00
# Warmup Fork: 1 of 1
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 32329646,936 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 16,67% complete, ETA 00:00:01
# Fork: 1 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 49258304,096 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 33,33% complete, ETA 00:00:01
# Fork: 2 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 49350488,843 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 50,00% complete, ETA 00:00:00
# Fork: 3 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 118531636,470 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 66,67% complete, ETA 00:00:00
# Fork: 4 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 30263671,036 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 83,33% complete, ETA 00:00:00
# Fork: 5 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 88961929,823 ops/s
# Processing profiler results: CountingExternalProfiler 


Result "org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench":
  67273206,054 ±(99.9%) 137674570,466 ops/s [Average]
  (min, avg, max) = (30263671,036, 67273206,054, 118531636,470), stdev = 35753648,746
  CI (99.9%): [≈ 0, 204947776,520] (assumes normal distribution)


# Run complete. Total time: 00:00:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt         Score           Error  Units
CountingExternalProfilerTest.bench  thrpt    5  67273206,054 ± 137674570,466  ops/s
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench

# Run progress: 0,00% complete, ETA 00:00:00
# Warmup Fork: 1 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 97266572,395 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 16,67% complete, ETA 00:00:01
# Warmup Fork: 2 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 47885467,111 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 33,33% complete, ETA 00:00:00
# Warmup Fork: 3 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 47480978,483 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 50,00% complete, ETA 00:00:00
# Warmup Fork: 4 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 48369026,039 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 66,67% complete, ETA 00:00:00
# Warmup Fork: 5 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 43815727,209 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 83,33% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 120524799,418 ops/s
# Processing profiler results: CountingExternalProfiler 


Result "org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench":
  120524799,418 ops/s


# Run complete. Total time: 00:00:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt          Score   Error  Units
CountingExternalProfilerTest.bench  thrpt       120524799,418          ops/s
# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 1 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench

# Run progress: 0,00% complete, ETA 00:00:00
# Warmup Fork: 1 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 969581157,338 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 10,00% complete, ETA 00:00:02
# Warmup Fork: 2 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 42599410,763 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 20,00% complete, ETA 00:00:02
# Warmup Fork: 3 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 44030061,331 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 30,00% complete, ETA 00:00:01
# Warmup Fork: 4 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 125695119,586 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 40,00% complete, ETA 00:00:01
# Warmup Fork: 5 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 61429864,253 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 50,00% complete, ETA 00:00:01
# Fork: 1 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 61286742,339 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 60,00% complete, ETA 00:00:00
# Fork: 2 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 93600210,716 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 70,00% complete, ETA 00:00:00
# Fork: 3 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 77432082,325 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 80,00% complete, ETA 00:00:00
# Fork: 4 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 62271030,565 ops/s
# Processing profiler results: CountingExternalProfiler 

# Run progress: 90,00% complete, ETA 00:00:00
# Fork: 5 of 5
# Preparing profilers: CountingExternalProfiler 
The Dynamic Halt is NOT Active
Iteration   1: 46725863,088 ops/s
# Processing profiler results: CountingExternalProfiler 


Result "org.openjdk.jmh.it.profilers.CountingExternalProfilerTest.bench":
  68263185,807 ±(99.9%) 68733359,154 ops/s [Average]
  (min, avg, max) = (46725863,088, 68263185,807, 93600210,716), stdev = 17849835,100
  CI (99.9%): [≈ 0, 136996544,961] (assumes normal distribution)


# Run complete. Total time: 00:00:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt         Score          Error  Units
CountingExternalProfilerTest.bench  thrpt    5  68263185,807 ± 68733359,154  ops/s
