# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openjdk.jmh.it.fork.override.ForkOverride_D_D_Test.test1

# Run progress: 0,00% complete, ETA 00:00:01
# Fork: 1 of 5
The Dynamic Halt is NOT Active
Iteration   1: 85,544 ops/s

# Run progress: 6,64% complete, ETA 00:00:06
# Fork: 2 of 5
The Dynamic Halt is NOT Active
Iteration   1: 81,290 ops/s

# Run progress: 13,29% complete, ETA 00:00:06
# Fork: 3 of 5
The Dynamic Halt is NOT Active
Iteration   1: 82,811 ops/s

# Run progress: 19,93% complete, ETA 00:00:05
# Fork: 4 of 5
The Dynamic Halt is NOT Active
Iteration   1: 82,947 ops/s

# Run progress: 26,58% complete, ETA 00:00:05
# Fork: 5 of 5
The Dynamic Halt is NOT Active
Iteration   1: 78,163 ops/s


Result "org.openjdk.jmh.it.fork.override.ForkOverride_D_D_Test.test1":
  82,151 ±(99.9%) 10,408 ops/s [Average]
  (min, avg, max) = (78,163, 82,151, 85,544), stdev = 2,703
  CI (99.9%): [71,743, 92,559] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.jmh.it.fork.override.ForkOverride_D_D_Test.test1

# Run progress: 33,22% complete, ETA 00:00:05
# Fork: 1 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 s/op

# Run progress: 39,87% complete, ETA 00:00:04
# Fork: 2 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 s/op

# Run progress: 46,51% complete, ETA 00:00:04
# Fork: 3 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 s/op

# Run progress: 53,16% complete, ETA 00:00:03
# Fork: 4 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 s/op

# Run progress: 59,80% complete, ETA 00:00:03
# Fork: 5 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 s/op


Result "org.openjdk.jmh.it.fork.override.ForkOverride_D_D_Test.test1":
  0,012 ±(99.9%) 0,001 s/op [Average]
  (min, avg, max) = (0,012, 0,012, 0,012), stdev = 0,001
  CI (99.9%): [0,011, 0,013] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openjdk.jmh.it.fork.override.ForkOverride_D_D_Test.test1

# Run progress: 66,45% complete, ETA 00:00:02
# Fork: 1 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,014 s/op
                 p0.95:   0,014 s/op
                 p0.99:   0,014 s/op
                 p0.999:  0,014 s/op
                 p0.9999: 0,014 s/op
                 p1.00:   0,014 s/op


# Run progress: 73,09% complete, ETA 00:00:02
# Fork: 2 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op


# Run progress: 79,73% complete, ETA 00:00:01
# Fork: 3 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op


# Run progress: 86,38% complete, ETA 00:00:01
# Fork: 4 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,001 s/op
                 p0.00:   0,011 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,013 s/op
                 p0.95:   0,013 s/op
                 p0.99:   0,013 s/op
                 p0.999:  0,013 s/op
                 p0.9999: 0,013 s/op
                 p1.00:   0,013 s/op


# Run progress: 93,02% complete, ETA 00:00:00
# Fork: 5 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,012 ±(99.9%) 0,002 s/op
                 p0.00:   0,010 s/op
                 p0.50:   0,013 s/op
                 p0.90:   0,014 s/op
                 p0.95:   0,014 s/op
                 p0.99:   0,014 s/op
                 p0.999:  0,014 s/op
                 p0.9999: 0,014 s/op
                 p1.00:   0,014 s/op



Result "org.openjdk.jmh.it.fork.override.ForkOverride_D_D_Test.test1":
  N = 45
  mean =      0,012 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,010, 0,010) = 2 
    [0,010, 0,011) = 0 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 1 
    [0,011, 0,011) = 3 
    [0,011, 0,012) = 1 
    [0,012, 0,012) = 1 
    [0,012, 0,012) = 2 
    [0,012, 0,012) = 1 
    [0,012, 0,013) = 2 
    [0,013, 0,013) = 26 
    [0,013, 0,013) = 1 
    [0,013, 0,013) = 1 
    [0,013, 0,014) = 1 
    [0,014, 0,014) = 1 
    [0,014, 0,014) = 0 
    [0,014, 0,014) = 0 
    [0,014, 0,015) = 1 
    [0,015, 0,015) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,010 s/op
     p(50,0000) =      0,013 s/op
     p(90,0000) =      0,013 s/op
     p(95,0000) =      0,013 s/op
     p(99,0000) =      0,014 s/op
     p(99,9000) =      0,014 s/op
     p(99,9900) =      0,014 s/op
     p(99,9990) =      0,014 s/op
     p(99,9999) =      0,014 s/op
    p(100,0000) =      0,014 s/op


# JMH version: 1.37
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /Users/antoniotrovato/Library/Java/JavaVirtualMachines/corretto-1.8.0_432/Contents/Home/jre/bin/java
# VM options: -Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 1 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openjdk.jmh.it.fork.override.ForkOverride_D_D_Test.test1

# Run progress: 99,67% complete, ETA 00:00:00
# Fork: 1 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,013 s/op

# Run progress: 99,73% complete, ETA 00:00:00
# Fork: 2 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,011 s/op

# Run progress: 99,80% complete, ETA 00:00:00
# Fork: 3 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,014 s/op

# Run progress: 99,87% complete, ETA 00:00:00
# Fork: 4 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,011 s/op

# Run progress: 99,93% complete, ETA 00:00:00
# Fork: 5 of 5
The Dynamic Halt is NOT Active
Iteration   1: 0,014 s/op


Result "org.openjdk.jmh.it.fork.override.ForkOverride_D_D_Test.test1":
  N = 5
  mean =      0,013 ±(99.9%) 0,006 s/op

  Histogram, s/op:
    [0,010, 0,010) = 0 
    [0,010, 0,011) = 0 
    [0,011, 0,011) = 0 
    [0,011, 0,011) = 2 
    [0,011, 0,011) = 0 
    [0,011, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,012) = 0 
    [0,012, 0,013) = 0 
    [0,013, 0,013) = 0 
    [0,013, 0,013) = 1 
    [0,013, 0,013) = 0 
    [0,013, 0,014) = 0 
    [0,014, 0,014) = 0 
    [0,014, 0,014) = 1 
    [0,014, 0,014) = 0 
    [0,014, 0,015) = 1 
    [0,015, 0,015) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,011 s/op
     p(50,0000) =      0,013 s/op
     p(90,0000) =      0,014 s/op
     p(95,0000) =      0,014 s/op
     p(99,0000) =      0,014 s/op
     p(99,9000) =      0,014 s/op
     p(99,9900) =      0,014 s/op
     p(99,9990) =      0,014 s/op
     p(99,9999) =      0,014 s/op
    p(100,0000) =      0,014 s/op


# Run complete. Total time: 00:00:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                              Mode  Cnt   Score    Error  Units
ForkOverride_D_D_Test.test1           thrpt    5  82,151 ± 10,408  ops/s
ForkOverride_D_D_Test.test1            avgt    5   0,012 ±  0,001   s/op
ForkOverride_D_D_Test.test1          sample   45   0,012 ±  0,001   s/op
ForkOverride_D_D_Test.test1:p0.00    sample        0,010            s/op
ForkOverride_D_D_Test.test1:p0.50    sample        0,013            s/op
ForkOverride_D_D_Test.test1:p0.90    sample        0,013            s/op
ForkOverride_D_D_Test.test1:p0.95    sample        0,013            s/op
ForkOverride_D_D_Test.test1:p0.99    sample        0,014            s/op
ForkOverride_D_D_Test.test1:p0.999   sample        0,014            s/op
ForkOverride_D_D_Test.test1:p0.9999  sample        0,014            s/op
ForkOverride_D_D_Test.test1:p1.00    sample        0,014            s/op
ForkOverride_D_D_Test.test1              ss    5   0,013 ±  0,006   s/op
